project_name: pachctl

env:
  - DOCKER_BUILDKIT=1

before:
  hooks:
    - go mod download
    - go generate ./...

builds:
  -
    id: pachctl
    dir: src/server/cmd/pachctl
    main: main.go
    binary: pachctl
    ldflags:
      - -X {{ .Env.LD_FLAGS }} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser
      #- -X github.com/pachyderm/pachyderm/src/client/version.AdditionalVersion={{.Env.VERSION_ADDITIONAL}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser
    gcflags:
      - all=-trimpath={{ .Env.PWD }}
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
  #-
    #id: pachd
    #dir: src/server/cmd/pachd
    #main: main.go
    #binary: pachd
    #ldflags:
      #- -X {{ .Env.LD_FLAGS }} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser
    #gcflags:
      #- all=-trimpath={{ .Env.PWD }}
    #env:
      #- CGO_ENABLED=0
    #goos:
      #- linux
    #goarch:
      #- amd64
  #-
    #id: worker
    #dir: src/server/cmd/worker
    #main: main.go
    #binary: worker
    #ldflags:
      #- -X {{ .Env.LD_FLAGS }} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser
    #gcflags:
      #- all=-trimpath={{ .Env.PWD }}
    #env:
      #- CGO_ENABLED=0
    #goos:
      #- linux
    #goarch:
      #- amd64

archives:
  -
    id: pachctl-archives
    builds:
      - pachctl
    format_overrides:
      - goos: darwin
        format: zip
    wrap_in_directory: true
    files:
      - pachctl*/pachctl

checksum:
  disable: true

snapshot:
  name_template: "{{ .Env.VERSION }}{{ .Env.VERSION_ADDITIONAL }}"

changelog:
  skip: false

nfpms:
  -
    id: pachctl-deb
    package_name: pachctl
    file_name_template: "{{ .ProjectName }}_{{ .Env.VERSION }}{{ .Env.VERSION_ADDITIONAL }}_{{ .Arch }}"
    builds: 
      - pachctl
    replacements:
      linux: ""
      amd64: amd64
    vendor: Pachyderm
    homepage: https://www.pachyderm.com/
    maintainer: nitin@pachyderm.com
    description: "Reproducible data science"
    formats:
      - deb
    bindir: /usr/bin

release:
  prerelease: auto

brews:
  -
    name: pachctl@{{.Major}}.{{.Minor}}
    ids:
      - pachctl-archives
    homepage: "github.com/pachyderm/pachyderm"
    description: "Reproducible data science"
    tap:
      owner: pachyderm
      name: homebrew-tap
    url_template: "https://github.com/pachyderm/pachyderm/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    commit_author:
      name: pachyderm
      email: nitin@pachyderm.com
    test: |
      system "#{bin}/pachctl version"
    install: |
      bin.install buildpath/"pachctl"
    skip_upload: true

dockers:
  -
    image_templates:
      - pachyderm_build
    skip_push: true
    dockerfile: Dockerfile.pachd
    build_flag_templates:
      - "--build-arg=GO_VERSION={{ .Env.GOVERSION }}"
      - "--build-arg=LD_FLAGS=-X {{ .Env.LD_FLAGS }}"
      - "--progress=plain"
    extra_files:
      - Makefile
      - go.mod
      - go.sum
      - src
  -
    image_templates:
      - pachyderm/pachd
      - pachyderm/pachd:local
    skip_push: true
    dockerfile: etc/pachd/Dockerfile
  -
    image_templates:
      - pachyderm/pachctl
    skip_push: true
    dockerfile: Dockerfile.pachctl
    build_flag_templates:
      - "--build-arg=GO_VERSION={{ .Env.GOVERSION }}"
      - "--build-arg=LD_FLAGS=-X {{ .Env.LD_FLAGS }}"
      - "--progress=plain"
    extra_files:
      - Makefile
      - go.mod
      - go.sum
      - src
  -
    image_templates:
      - pachyderm/worker
      - pachyderm/worker:local
    skip_push: true
    dockerfile: etc/worker/Dockerfile
    build_flag_templates:
      - "--build-arg=GO_VERSION={{ .Env.GOVERSION }}"
      - "--progress=plain"
    extra_files:
      - etc/worker/init.go
