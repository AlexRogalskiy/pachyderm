#!/bin/sh

set -Ee

DIR="$(cd "$(dirname "${0}")/.." && pwd)"

# http://stackoverflow.com/a/17110582
relpath() {
  perl -e 'use File::Spec; print File::Spec->abs2rel(@ARGV) . "\n"' "${1}" "${DIR}"
}

docker pull pedge/protolog

PACKAGE_PATHS=
PACKAGE_PATHS="${PACKAGE_PATHS},Mgoogle/protobuf/empty.proto=github.com/peter-edge/go-google-protobuf"
PACKAGE_PATHS="${PACKAGE_PATHS},Mgoogle/protobuf/timestamp.proto=github.com/peter-edge/go-google-protobuf"
PACKAGE_PATHS="${PACKAGE_PATHS},Mgoogle/protobuf/wrappers.proto=github.com/peter-edge/go-google-protobuf"
PACKAGE_PATHS="${PACKAGE_PATHS},Mpps/pps.proto=github.com/pachyderm/pachyderm/src/pps"

for file in $(find "${DIR}" -name '*.proto'); do
  REL_FILE="$(relpath "${file}")"
  REL_DIR="$(dirname "${REL_FILE}")"
  PACKAGE_PATHS="${PACKAGE_PATHS},M${REL_FILE}=github.com/pachyderm/pachyderm/${REL_DIR}"
done

for file in $(find "${DIR}" -name '*.proto'); do
  REL_FILE="$(relpath "${file}")"
  PROTO_FILE=$(basename "${REL_FILE}")
  PROTO_DIR="$(dirname "${REL_FILE}")"
  PROTO_PB_FILE="$(echo "${PROTO_FILE}" | sed "s/\.proto/\.pb\.go/")"
  PROTO_PB_LOG_FILE="$(echo "${PROTO_FILE}" | sed "s/\.proto/\.pb\.log\.go/")"

  PROTOLOG=false
  if [ "${PROTO_FILE}" = "protolog.proto" ]; then
    PROTOLOG=true
  fi

  PROTOLOG_OPTS=
  if ${PROTOLOG}; then
    PROTOLOG_OPTS="--protolog_out=/compile/src"
  fi

  echo docker run --volume ${DIR}:/compile --workdir /compile pedge/protolog \
    protoc -I /usr/include -I /compile/src --go_out=plugins=grpc${PACKAGE_PATHS}:/compile/src ${PROTOLOG_OPTS} /compile/${PROTO_DIR}/${PROTO_FILE}
  docker run --volume ${DIR}:/compile --workdir /compile pedge/protolog \
    protoc -I /usr/include -I /compile/src --go_out=plugins=grpc${PACKAGE_PATHS}:/compile/src ${PROTOLOG_OPTS} /compile/${PROTO_DIR}/${PROTO_FILE}

  sudo chown ${USER} ${PROTO_DIR}/${PROTO_PB_FILE}
  sudo chgrp ${USER} ${PROTO_DIR}/${PROTO_PB_FILE}
  if ${PROTOLOG}; then
    sudo chown ${USER} ${PROTO_DIR}/${PROTO_PB_LOG_FILE}
    sudo chgrp ${USER} ${PROTO_DIR}/${PROTO_PB_LOG_FILE}
  fi
done
