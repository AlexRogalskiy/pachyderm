// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: internal/collection/collection.proto

package collection

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type NotifyPayload_Type int32

const (
	NotifyPayload_PUT    NotifyPayload_Type = 0
	NotifyPayload_DELETE NotifyPayload_Type = 1
)

var NotifyPayload_Type_name = map[int32]string{
	0: "PUT",
	1: "DELETE",
}

var NotifyPayload_Type_value = map[string]int32{
	"PUT":    0,
	"DELETE": 1,
}

func (x NotifyPayload_Type) String() string {
	return proto.EnumName(NotifyPayload_Type_name, int32(x))
}

func (NotifyPayload_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_026efb7995b2037b, []int{1, 0}
}

type NotifyInfo struct {
	Table                string   `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Fields               []string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	Values               []string `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyInfo) Reset()         { *m = NotifyInfo{} }
func (m *NotifyInfo) String() string { return proto.CompactTextString(m) }
func (*NotifyInfo) ProtoMessage()    {}
func (*NotifyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_026efb7995b2037b, []int{0}
}
func (m *NotifyInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NotifyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NotifyInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NotifyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyInfo.Merge(m, src)
}
func (m *NotifyInfo) XXX_Size() int {
	return m.Size()
}
func (m *NotifyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyInfo proto.InternalMessageInfo

func (m *NotifyInfo) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *NotifyInfo) GetFields() []string {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *NotifyInfo) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type NotifyPayload struct {
	Info                 *NotifyInfo        `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Key                  string             `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Type                 NotifyPayload_Type `protobuf:"varint,3,opt,name=type,proto3,enum=common.NotifyPayload_Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *NotifyPayload) Reset()         { *m = NotifyPayload{} }
func (m *NotifyPayload) String() string { return proto.CompactTextString(m) }
func (*NotifyPayload) ProtoMessage()    {}
func (*NotifyPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_026efb7995b2037b, []int{1}
}
func (m *NotifyPayload) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NotifyPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NotifyPayload.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NotifyPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyPayload.Merge(m, src)
}
func (m *NotifyPayload) XXX_Size() int {
	return m.Size()
}
func (m *NotifyPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyPayload.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyPayload proto.InternalMessageInfo

func (m *NotifyPayload) GetInfo() *NotifyInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *NotifyPayload) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *NotifyPayload) GetType() NotifyPayload_Type {
	if m != nil {
		return m.Type
	}
	return NotifyPayload_PUT
}

func init() {
	proto.RegisterEnum("common.NotifyPayload_Type", NotifyPayload_Type_name, NotifyPayload_Type_value)
	proto.RegisterType((*NotifyInfo)(nil), "common.NotifyInfo")
	proto.RegisterType((*NotifyPayload)(nil), "common.NotifyPayload")
}

func init() {
	proto.RegisterFile("internal/collection/collection.proto", fileDescriptor_026efb7995b2037b)
}

var fileDescriptor_026efb7995b2037b = []byte{
	// 276 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xd1, 0x4a, 0x84, 0x40,
	0x14, 0x86, 0x9b, 0x75, 0x33, 0xf6, 0x44, 0x21, 0x43, 0x84, 0x14, 0x88, 0x48, 0x84, 0x57, 0x0a,
	0x76, 0xd5, 0x6d, 0x24, 0x11, 0x44, 0x2c, 0x62, 0x37, 0xdd, 0x8d, 0x3a, 0xb6, 0x43, 0xb3, 0x73,
	0x44, 0x67, 0x17, 0xe6, 0x45, 0x7a, 0xa6, 0x2e, 0x7b, 0x84, 0xf0, 0x49, 0x42, 0x5d, 0x68, 0x83,
	0xee, 0xfe, 0xef, 0xcc, 0x9c, 0xef, 0x87, 0x03, 0x57, 0x42, 0x69, 0xde, 0x2a, 0x26, 0xe3, 0x12,
	0xa5, 0xe4, 0xa5, 0x16, 0xa8, 0xf6, 0x62, 0xd4, 0xb4, 0xa8, 0x91, 0xda, 0x25, 0xae, 0xd7, 0xa8,
	0x82, 0x0c, 0xe0, 0x19, 0xb5, 0xa8, 0xcd, 0xa3, 0xaa, 0x91, 0x9e, 0xc1, 0xa1, 0x66, 0x85, 0xe4,
	0x2e, 0xf1, 0x49, 0xb8, 0xc8, 0x26, 0xa0, 0xe7, 0x60, 0xd7, 0x82, 0xcb, 0xaa, 0x73, 0x67, 0xbe,
	0x15, 0x2e, 0xb2, 0x1d, 0x0d, 0xf3, 0x2d, 0x93, 0x1b, 0xde, 0xb9, 0xd6, 0x34, 0x9f, 0x28, 0xf8,
	0x20, 0x70, 0x32, 0x49, 0x97, 0xcc, 0x48, 0x64, 0x15, 0xbd, 0x86, 0xb9, 0x50, 0x35, 0x8e, 0xda,
	0xe3, 0x84, 0x46, 0x53, 0x79, 0xf4, 0xdb, 0x9c, 0x8d, 0xef, 0xd4, 0x01, 0xeb, 0x9d, 0x1b, 0x77,
	0x36, 0xb6, 0x0f, 0x91, 0x46, 0x30, 0xd7, 0xa6, 0xe1, 0xae, 0xe5, 0x93, 0xf0, 0x34, 0xb9, 0xf8,
	0xbb, 0xb9, 0xd3, 0x47, 0xb9, 0x69, 0x78, 0x36, 0xfe, 0x0b, 0x2e, 0x61, 0x3e, 0x10, 0x3d, 0x02,
	0x6b, 0xf9, 0x92, 0x3b, 0x07, 0x14, 0xc0, 0xbe, 0x4f, 0x9f, 0xd2, 0x3c, 0x75, 0xc8, 0xdd, 0xc3,
	0x67, 0xef, 0x91, 0xaf, 0xde, 0x23, 0xdf, 0xbd, 0x47, 0x5e, 0x6f, 0xdf, 0x84, 0x5e, 0x6d, 0x8a,
	0x41, 0x19, 0x37, 0xac, 0x5c, 0x99, 0x8a, 0xb7, 0xfb, 0x69, 0x9b, 0xc4, 0x5d, 0x5b, 0xc6, 0xff,
	0x9c, 0xb3, 0xb0, 0xc7, 0x23, 0xde, 0xfc, 0x04, 0x00, 0x00, 0xff, 0xff, 0x92, 0x32, 0x01, 0x73,
	0x6c, 0x01, 0x00, 0x00,
}

func (m *NotifyInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NotifyInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NotifyInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Values) > 0 {
		for iNdEx := len(m.Values) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Values[iNdEx])
			copy(dAtA[i:], m.Values[iNdEx])
			i = encodeVarintCollection(dAtA, i, uint64(len(m.Values[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Fields) > 0 {
		for iNdEx := len(m.Fields) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Fields[iNdEx])
			copy(dAtA[i:], m.Fields[iNdEx])
			i = encodeVarintCollection(dAtA, i, uint64(len(m.Fields[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Table) > 0 {
		i -= len(m.Table)
		copy(dAtA[i:], m.Table)
		i = encodeVarintCollection(dAtA, i, uint64(len(m.Table)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *NotifyPayload) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NotifyPayload) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NotifyPayload) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Type != 0 {
		i = encodeVarintCollection(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintCollection(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0x12
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCollection(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintCollection(dAtA []byte, offset int, v uint64) int {
	offset -= sovCollection(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *NotifyInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Table)
	if l > 0 {
		n += 1 + l + sovCollection(uint64(l))
	}
	if len(m.Fields) > 0 {
		for _, s := range m.Fields {
			l = len(s)
			n += 1 + l + sovCollection(uint64(l))
		}
	}
	if len(m.Values) > 0 {
		for _, s := range m.Values {
			l = len(s)
			n += 1 + l + sovCollection(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NotifyPayload) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovCollection(uint64(l))
	}
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovCollection(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovCollection(uint64(m.Type))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovCollection(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCollection(x uint64) (n int) {
	return sovCollection(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *NotifyInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCollection
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NotifyInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NotifyInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Table", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCollection
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCollection
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Table = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fields", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCollection
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCollection
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Fields = append(m.Fields, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Values", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCollection
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCollection
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Values = append(m.Values, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCollection(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCollection
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NotifyPayload) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCollection
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NotifyPayload: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NotifyPayload: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCollection
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCollection
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &NotifyInfo{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCollection
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCollection
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= NotifyPayload_Type(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCollection(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCollection
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCollection(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCollection
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCollection
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCollection
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCollection
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCollection
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCollection
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCollection        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCollection          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCollection = fmt.Errorf("proto: unexpected end of group")
)
