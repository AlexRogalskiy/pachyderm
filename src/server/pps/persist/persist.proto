syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "client/pfs/pfs.proto";
import "client/pps/pps.proto";

package pachyderm.pps.persist;

option go_package = "persist";

message JobInfo {
  string job_id = 1;
  pps.Transform transform = 2;
  string pipeline_name = 3;
  uint64 parallelism = 4;
  repeated pps.JobInput inputs = 5;
  pps.Job parent_job = 6;
  google.protobuf.Timestamp created_at = 7;
  pfs.Commit output_commit = 8;
  pps.JobState state = 9;
  string commit_index = 10;
  uint64 pods_started = 11;
  uint64 pods_succeeded = 12;
  uint64 pods_failed = 13;
}

message JobInfos {
  repeated JobInfo job_info = 1;
}

message JobOutput {
  string job_id = 1;
  pfs.Commit output_commit = 2;
}

message JobState {
	string job_id = 1;
	pps.JobState state = 2;
}

message PipelineInfo {
  string pipeline_name = 1;
  pachyderm.pps.Transform transform = 2;
  uint64 parallelism = 3;  // this is the degree of parallelism
  repeated pps.PipelineInput inputs = 4;
  pfs.Repo output_repo = 5;
  google.protobuf.Timestamp created_at = 6;
  uint64 shard = 7;  // this is which shard the pipeline is assigned to
}

message PipelineInfoChange {
  PipelineInfo pipeline = 1;
  bool removed = 2;
}

message PipelineInfos {
  repeated PipelineInfo pipeline_info = 1;
}

message SubscribePipelineInfosRequest {
  bool include_initial = 1;
  Shard shard = 2;
}

message ListPipelineInfosRequest {
  Shard shard = 1;
}

// As in, sharding
message Shard {
  uint64 number = 1;
}

service API {
  // Job rpcs
  // job_id cannot be set
  // timestamp cannot be set
  rpc CreateJobInfo(JobInfo) returns (JobInfo) {}
  rpc InspectJob(pachyderm.pps.InspectJobRequest) returns (JobInfo) {}
  // ordered by time, latest to earliest
  rpc ListJobInfos(pachyderm.pps.ListJobRequest) returns (JobInfos) {}
  // should only be called when rolling back if a Job does not start!
  rpc DeleteJobInfo(pachyderm.pps.Job) returns (google.protobuf.Empty) {}

  // JobOutput rpcs
  rpc CreateJobOutput(JobOutput) returns (google.protobuf.Empty) {}

  // JobState rpcs
  rpc CreateJobState(JobState) returns (google.protobuf.Empty) {}

  // Pipeline rpcs
  rpc CreatePipelineInfo(PipelineInfo) returns (PipelineInfo) {}
  rpc GetPipelineInfo(pachyderm.pps.Pipeline) returns (PipelineInfo) {}
  // ordered by time, latest to earliest
  rpc ListPipelineInfos(ListPipelineInfosRequest) returns (PipelineInfos) {}
  rpc DeletePipelineInfo(pachyderm.pps.Pipeline) returns (google.protobuf.Empty) {}
  rpc SubscribePipelineInfos(SubscribePipelineInfosRequest) returns (stream PipelineInfoChange) {}

  // Shard rpcs
  // Returns the new job info
  rpc StartPod(pps.Job) returns (JobInfo) {}
  rpc SucceedPod(pps.Job) returns (JobInfo) {}
  rpc FailPod(pps.Job) returns (JobInfo) {}
}
