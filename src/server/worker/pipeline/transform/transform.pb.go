// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: server/worker/pipeline/transform/transform.proto

package transform

import (
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	pfs "github.com/pachyderm/pachyderm/src/client/pfs"
	pps "github.com/pachyderm/pachyderm/src/client/pps"
	common "github.com/pachyderm/pachyderm/src/server/worker/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// DatumInputs is the message contained in the object pointed to by the
// DatumData.datums field.
type DatumInputs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs []*common.Input `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Index  int64           `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *DatumInputs) Reset() {
	*x = DatumInputs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_worker_pipeline_transform_transform_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatumInputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatumInputs) ProtoMessage() {}

func (x *DatumInputs) ProtoReflect() protoreflect.Message {
	mi := &file_server_worker_pipeline_transform_transform_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatumInputs.ProtoReflect.Descriptor instead.
func (*DatumInputs) Descriptor() ([]byte, []int) {
	return file_server_worker_pipeline_transform_transform_proto_rawDescGZIP(), []int{0}
}

func (x *DatumInputs) GetInputs() []*common.Input {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *DatumInputs) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type DatumInputsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datums []*DatumInputs `protobuf:"bytes,1,rep,name=datums,proto3" json:"datums,omitempty"`
}

func (x *DatumInputsList) Reset() {
	*x = DatumInputsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_worker_pipeline_transform_transform_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatumInputsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatumInputsList) ProtoMessage() {}

func (x *DatumInputsList) ProtoReflect() protoreflect.Message {
	mi := &file_server_worker_pipeline_transform_transform_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatumInputsList.ProtoReflect.Descriptor instead.
func (*DatumInputsList) Descriptor() ([]byte, []int) {
	return file_server_worker_pipeline_transform_transform_proto_rawDescGZIP(), []int{1}
}

func (x *DatumInputsList) GetDatums() []*DatumInputs {
	if x != nil {
		return x.Datums
	}
	return nil
}

// HashtreeTags is the message contained in the object generated by the
// registry when a job moves from the 'running' state to the 'merging' state. It
// contains references to all generated hashtree chunks from the job, which must
// be merged into the final hashtree.
type HashtreeTags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkTags []string `protobuf:"bytes,1,rep,name=chunk_tags,json=chunkTags,proto3" json:"chunk_tags,omitempty"`
	StatsTags []string `protobuf:"bytes,2,rep,name=stats_tags,json=statsTags,proto3" json:"stats_tags,omitempty"`
}

func (x *HashtreeTags) Reset() {
	*x = HashtreeTags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_worker_pipeline_transform_transform_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashtreeTags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashtreeTags) ProtoMessage() {}

func (x *HashtreeTags) ProtoReflect() protoreflect.Message {
	mi := &file_server_worker_pipeline_transform_transform_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashtreeTags.ProtoReflect.Descriptor instead.
func (*HashtreeTags) Descriptor() ([]byte, []int) {
	return file_server_worker_pipeline_transform_transform_proto_rawDescGZIP(), []int{2}
}

func (x *HashtreeTags) GetChunkTags() []string {
	if x != nil {
		return x.ChunkTags
	}
	return nil
}

func (x *HashtreeTags) GetStatsTags() []string {
	if x != nil {
		return x.StatsTags
	}
	return nil
}

type RecoveredDatums struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hashes []string `protobuf:"bytes,1,rep,name=hashes,proto3" json:"hashes,omitempty"`
}

func (x *RecoveredDatums) Reset() {
	*x = RecoveredDatums{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_worker_pipeline_transform_transform_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoveredDatums) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoveredDatums) ProtoMessage() {}

func (x *RecoveredDatums) ProtoReflect() protoreflect.Message {
	mi := &file_server_worker_pipeline_transform_transform_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoveredDatums.ProtoReflect.Descriptor instead.
func (*RecoveredDatums) Descriptor() ([]byte, []int) {
	return file_server_worker_pipeline_transform_transform_proto_rawDescGZIP(), []int{3}
}

func (x *RecoveredDatums) GetHashes() []string {
	if x != nil {
		return x.Hashes
	}
	return nil
}

type RecoveredDatumTags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *RecoveredDatumTags) Reset() {
	*x = RecoveredDatumTags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_worker_pipeline_transform_transform_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoveredDatumTags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoveredDatumTags) ProtoMessage() {}

func (x *RecoveredDatumTags) ProtoReflect() protoreflect.Message {
	mi := &file_server_worker_pipeline_transform_transform_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoveredDatumTags.ProtoReflect.Descriptor instead.
func (*RecoveredDatumTags) Descriptor() ([]byte, []int) {
	return file_server_worker_pipeline_transform_transform_proto_rawDescGZIP(), []int{4}
}

func (x *RecoveredDatumTags) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type HashtreeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address used for fetching a cached version directly from the worker
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// The chunk-id can be used to fetch the cached hashtree directly from the worker
	Tag string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	// The object can be used to fetch the hashtree from object storage if the
	// worker cannot be reached or does not have it cached.
	Object *pfs.Object `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *HashtreeInfo) Reset() {
	*x = HashtreeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_worker_pipeline_transform_transform_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashtreeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashtreeInfo) ProtoMessage() {}

func (x *HashtreeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_worker_pipeline_transform_transform_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashtreeInfo.ProtoReflect.Descriptor instead.
func (*HashtreeInfo) Descriptor() ([]byte, []int) {
	return file_server_worker_pipeline_transform_transform_proto_rawDescGZIP(), []int{5}
}

func (x *HashtreeInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *HashtreeInfo) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *HashtreeInfo) GetObject() *pfs.Object {
	if x != nil {
		return x.Object
	}
	return nil
}

type DatumStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessStats    *pps.ProcessStats `protobuf:"bytes,1,opt,name=process_stats,json=processStats,proto3" json:"process_stats,omitempty"`
	DatumsProcessed int64             `protobuf:"varint,2,opt,name=datums_processed,json=datumsProcessed,proto3" json:"datums_processed,omitempty"`
	DatumsSkipped   int64             `protobuf:"varint,3,opt,name=datums_skipped,json=datumsSkipped,proto3" json:"datums_skipped,omitempty"`
	DatumsFailed    int64             `protobuf:"varint,5,opt,name=datums_failed,json=datumsFailed,proto3" json:"datums_failed,omitempty"`
	DatumsRecovered int64             `protobuf:"varint,6,opt,name=datums_recovered,json=datumsRecovered,proto3" json:"datums_recovered,omitempty"`
	FailedDatumId   string            `protobuf:"bytes,8,opt,name=failed_datum_id,json=failedDatumId,proto3" json:"failed_datum_id,omitempty"`
}

func (x *DatumStats) Reset() {
	*x = DatumStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_worker_pipeline_transform_transform_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatumStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatumStats) ProtoMessage() {}

func (x *DatumStats) ProtoReflect() protoreflect.Message {
	mi := &file_server_worker_pipeline_transform_transform_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatumStats.ProtoReflect.Descriptor instead.
func (*DatumStats) Descriptor() ([]byte, []int) {
	return file_server_worker_pipeline_transform_transform_proto_rawDescGZIP(), []int{6}
}

func (x *DatumStats) GetProcessStats() *pps.ProcessStats {
	if x != nil {
		return x.ProcessStats
	}
	return nil
}

func (x *DatumStats) GetDatumsProcessed() int64 {
	if x != nil {
		return x.DatumsProcessed
	}
	return 0
}

func (x *DatumStats) GetDatumsSkipped() int64 {
	if x != nil {
		return x.DatumsSkipped
	}
	return 0
}

func (x *DatumStats) GetDatumsFailed() int64 {
	if x != nil {
		return x.DatumsFailed
	}
	return 0
}

func (x *DatumStats) GetDatumsRecovered() int64 {
	if x != nil {
		return x.DatumsRecovered
	}
	return 0
}

func (x *DatumStats) GetFailedDatumId() string {
	if x != nil {
		return x.FailedDatumId
	}
	return ""
}

type DatumData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Inputs
	JobId        string      `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Datums       *pfs.Object `protobuf:"bytes,2,opt,name=datums,proto3" json:"datums,omitempty"`
	OutputCommit *pfs.Commit `protobuf:"bytes,3,opt,name=output_commit,json=outputCommit,proto3" json:"output_commit,omitempty"`
	// Outputs
	Stats              *DatumStats   `protobuf:"bytes,4,opt,name=stats,proto3" json:"stats,omitempty"`
	ChunkHashtree      *HashtreeInfo `protobuf:"bytes,5,opt,name=chunk_hashtree,json=chunkHashtree,proto3" json:"chunk_hashtree,omitempty"`
	StatsHashtree      *HashtreeInfo `protobuf:"bytes,6,opt,name=stats_hashtree,json=statsHashtree,proto3" json:"stats_hashtree,omitempty"`
	RecoveredDatumsTag string        `protobuf:"bytes,7,opt,name=recovered_datums_tag,json=recoveredDatumsTag,proto3" json:"recovered_datums_tag,omitempty"`
}

func (x *DatumData) Reset() {
	*x = DatumData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_worker_pipeline_transform_transform_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatumData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatumData) ProtoMessage() {}

func (x *DatumData) ProtoReflect() protoreflect.Message {
	mi := &file_server_worker_pipeline_transform_transform_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatumData.ProtoReflect.Descriptor instead.
func (*DatumData) Descriptor() ([]byte, []int) {
	return file_server_worker_pipeline_transform_transform_proto_rawDescGZIP(), []int{7}
}

func (x *DatumData) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *DatumData) GetDatums() *pfs.Object {
	if x != nil {
		return x.Datums
	}
	return nil
}

func (x *DatumData) GetOutputCommit() *pfs.Commit {
	if x != nil {
		return x.OutputCommit
	}
	return nil
}

func (x *DatumData) GetStats() *DatumStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *DatumData) GetChunkHashtree() *HashtreeInfo {
	if x != nil {
		return x.ChunkHashtree
	}
	return nil
}

func (x *DatumData) GetStatsHashtree() *HashtreeInfo {
	if x != nil {
		return x.StatsHashtree
	}
	return nil
}

func (x *DatumData) GetRecoveredDatumsTag() string {
	if x != nil {
		return x.RecoveredDatumsTag
	}
	return ""
}

type MergeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Inputs
	JobId     string          `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Hashtrees []*HashtreeInfo `protobuf:"bytes,2,rep,name=hashtrees,proto3" json:"hashtrees,omitempty"`
	Parent    *pfs.Object     `protobuf:"bytes,3,opt,name=parent,proto3" json:"parent,omitempty"`
	Shard     int64           `protobuf:"varint,4,opt,name=shard,proto3" json:"shard,omitempty"`
	Stats     bool            `protobuf:"varint,5,opt,name=stats,proto3" json:"stats,omitempty"`
	// Outputs
	Tree     *pfs.Object `protobuf:"bytes,6,opt,name=tree,proto3" json:"tree,omitempty"`
	TreeSize uint64      `protobuf:"varint,7,opt,name=tree_size,json=treeSize,proto3" json:"tree_size,omitempty"`
}

func (x *MergeData) Reset() {
	*x = MergeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_worker_pipeline_transform_transform_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeData) ProtoMessage() {}

func (x *MergeData) ProtoReflect() protoreflect.Message {
	mi := &file_server_worker_pipeline_transform_transform_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeData.ProtoReflect.Descriptor instead.
func (*MergeData) Descriptor() ([]byte, []int) {
	return file_server_worker_pipeline_transform_transform_proto_rawDescGZIP(), []int{8}
}

func (x *MergeData) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *MergeData) GetHashtrees() []*HashtreeInfo {
	if x != nil {
		return x.Hashtrees
	}
	return nil
}

func (x *MergeData) GetParent() *pfs.Object {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *MergeData) GetShard() int64 {
	if x != nil {
		return x.Shard
	}
	return 0
}

func (x *MergeData) GetStats() bool {
	if x != nil {
		return x.Stats
	}
	return false
}

func (x *MergeData) GetTree() *pfs.Object {
	if x != nil {
		return x.Tree
	}
	return nil
}

func (x *MergeData) GetTreeSize() uint64 {
	if x != nil {
		return x.TreeSize
	}
	return 0
}

var File_server_worker_pipeline_transform_transform_proto protoreflect.FileDescriptor

var file_server_worker_pipeline_transform_transform_proto_rawDesc = []byte{
	0x0a, 0x30, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2f,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x23, 0x70, 0x61, 0x63, 0x68, 0x79, 0x64, 0x65, 0x72, 0x6d, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x66, 0x73, 0x2f, 0x70, 0x66, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x70, 0x73, 0x2f,
	0x70, 0x70, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4a, 0x0a, 0x0b,
	0x44, 0x61, 0x74, 0x75, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x5b, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x75,
	0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x06, 0x64,
	0x61, 0x74, 0x75, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x61,
	0x63, 0x68, 0x79, 0x64, 0x65, 0x72, 0x6d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x52, 0x06, 0x64,
	0x61, 0x74, 0x75, 0x6d, 0x73, 0x22, 0x4c, 0x0a, 0x0c, 0x48, 0x61, 0x73, 0x68, 0x74, 0x72, 0x65,
	0x65, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x54, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x73, 0x54,
	0x61, 0x67, 0x73, 0x22, 0x29, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x75, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x22, 0x28,
	0x0a, 0x12, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x75, 0x6d,
	0x54, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x5f, 0x0a, 0x0c, 0x48, 0x61, 0x73, 0x68,
	0x74, 0x72, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x74, 0x61, 0x67, 0x12, 0x23, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x66, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xa1, 0x02, 0x0a, 0x0a, 0x44, 0x61,
	0x74, 0x75, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x70, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x29, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x75,
	0x6d, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64,
	0x61, 0x74, 0x75, 0x6d, 0x73, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x70,
	0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x73, 0x5f, 0x66, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x75, 0x6d,
	0x73, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x75, 0x6d,
	0x73, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x65, 0x64, 0x12, 0x39, 0x0a, 0x0f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xe2, 0xde, 0x1f,
	0x0d, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x49, 0x44, 0x52, 0x0d,
	0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x49, 0x64, 0x22, 0xb1, 0x03,
	0x0a, 0x09, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x06, 0x6a,
	0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xde, 0x1f,
	0x05, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x06, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x70, 0x66, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x64, 0x61, 0x74, 0x75,
	0x6d, 0x73, 0x12, 0x30, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x66, 0x73, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x12, 0x45, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x61, 0x63, 0x68, 0x79, 0x64, 0x65, 0x72, 0x6d, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x58, 0x0a, 0x0e, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x74, 0x72, 0x65, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x61, 0x63, 0x68, 0x79, 0x64, 0x65, 0x72, 0x6d, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x74, 0x72,
	0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x48, 0x61, 0x73,
	0x68, 0x74, 0x72, 0x65, 0x65, 0x12, 0x58, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x74, 0x72, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x70, 0x61, 0x63, 0x68, 0x79, 0x64, 0x65, 0x72, 0x6d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x74, 0x72, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x73, 0x48, 0x61, 0x73, 0x68, 0x74, 0x72, 0x65, 0x65, 0x12,
	0x30, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x75, 0x6d, 0x73, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x73, 0x54, 0x61,
	0x67, 0x22, 0x8d, 0x02, 0x0a, 0x09, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x20, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xe2, 0xde, 0x1f, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49,
	0x64, 0x12, 0x4f, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x68, 0x74, 0x72, 0x65, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x61, 0x63, 0x68, 0x79, 0x64, 0x65, 0x72, 0x6d,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x74,
	0x72, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x68, 0x61, 0x73, 0x68, 0x74, 0x72, 0x65,
	0x65, 0x73, 0x12, 0x23, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x66, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x74, 0x72, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x66, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04,
	0x74, 0x72, 0x65, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x72, 0x65, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x70, 0x61, 0x63, 0x68, 0x79, 0x64, 0x65, 0x72, 0x6d, 0x2f, 0x70, 0x61, 0x63, 0x68, 0x79, 0x64,
	0x65, 0x72, 0x6d, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_worker_pipeline_transform_transform_proto_rawDescOnce sync.Once
	file_server_worker_pipeline_transform_transform_proto_rawDescData = file_server_worker_pipeline_transform_transform_proto_rawDesc
)

func file_server_worker_pipeline_transform_transform_proto_rawDescGZIP() []byte {
	file_server_worker_pipeline_transform_transform_proto_rawDescOnce.Do(func() {
		file_server_worker_pipeline_transform_transform_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_worker_pipeline_transform_transform_proto_rawDescData)
	})
	return file_server_worker_pipeline_transform_transform_proto_rawDescData
}

var file_server_worker_pipeline_transform_transform_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_server_worker_pipeline_transform_transform_proto_goTypes = []interface{}{
	(*DatumInputs)(nil),        // 0: pachyderm.worker.pipeline.transform.DatumInputs
	(*DatumInputsList)(nil),    // 1: pachyderm.worker.pipeline.transform.DatumInputsList
	(*HashtreeTags)(nil),       // 2: pachyderm.worker.pipeline.transform.HashtreeTags
	(*RecoveredDatums)(nil),    // 3: pachyderm.worker.pipeline.transform.RecoveredDatums
	(*RecoveredDatumTags)(nil), // 4: pachyderm.worker.pipeline.transform.RecoveredDatumTags
	(*HashtreeInfo)(nil),       // 5: pachyderm.worker.pipeline.transform.HashtreeInfo
	(*DatumStats)(nil),         // 6: pachyderm.worker.pipeline.transform.DatumStats
	(*DatumData)(nil),          // 7: pachyderm.worker.pipeline.transform.DatumData
	(*MergeData)(nil),          // 8: pachyderm.worker.pipeline.transform.MergeData
	(*common.Input)(nil),       // 9: common.Input
	(*pfs.Object)(nil),         // 10: pfs.Object
	(*pps.ProcessStats)(nil),   // 11: pps.ProcessStats
	(*pfs.Commit)(nil),         // 12: pfs.Commit
}
var file_server_worker_pipeline_transform_transform_proto_depIdxs = []int32{
	9,  // 0: pachyderm.worker.pipeline.transform.DatumInputs.inputs:type_name -> common.Input
	0,  // 1: pachyderm.worker.pipeline.transform.DatumInputsList.datums:type_name -> pachyderm.worker.pipeline.transform.DatumInputs
	10, // 2: pachyderm.worker.pipeline.transform.HashtreeInfo.object:type_name -> pfs.Object
	11, // 3: pachyderm.worker.pipeline.transform.DatumStats.process_stats:type_name -> pps.ProcessStats
	10, // 4: pachyderm.worker.pipeline.transform.DatumData.datums:type_name -> pfs.Object
	12, // 5: pachyderm.worker.pipeline.transform.DatumData.output_commit:type_name -> pfs.Commit
	6,  // 6: pachyderm.worker.pipeline.transform.DatumData.stats:type_name -> pachyderm.worker.pipeline.transform.DatumStats
	5,  // 7: pachyderm.worker.pipeline.transform.DatumData.chunk_hashtree:type_name -> pachyderm.worker.pipeline.transform.HashtreeInfo
	5,  // 8: pachyderm.worker.pipeline.transform.DatumData.stats_hashtree:type_name -> pachyderm.worker.pipeline.transform.HashtreeInfo
	5,  // 9: pachyderm.worker.pipeline.transform.MergeData.hashtrees:type_name -> pachyderm.worker.pipeline.transform.HashtreeInfo
	10, // 10: pachyderm.worker.pipeline.transform.MergeData.parent:type_name -> pfs.Object
	10, // 11: pachyderm.worker.pipeline.transform.MergeData.tree:type_name -> pfs.Object
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_server_worker_pipeline_transform_transform_proto_init() }
func file_server_worker_pipeline_transform_transform_proto_init() {
	if File_server_worker_pipeline_transform_transform_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_worker_pipeline_transform_transform_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatumInputs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_worker_pipeline_transform_transform_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatumInputsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_worker_pipeline_transform_transform_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashtreeTags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_worker_pipeline_transform_transform_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoveredDatums); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_worker_pipeline_transform_transform_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoveredDatumTags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_worker_pipeline_transform_transform_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashtreeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_worker_pipeline_transform_transform_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatumStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_worker_pipeline_transform_transform_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatumData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_worker_pipeline_transform_transform_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_worker_pipeline_transform_transform_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_worker_pipeline_transform_transform_proto_goTypes,
		DependencyIndexes: file_server_worker_pipeline_transform_transform_proto_depIdxs,
		MessageInfos:      file_server_worker_pipeline_transform_transform_proto_msgTypes,
	}.Build()
	File_server_worker_pipeline_transform_transform_proto = out.File
	file_server_worker_pipeline_transform_transform_proto_rawDesc = nil
	file_server_worker_pipeline_transform_transform_proto_goTypes = nil
	file_server_worker_pipeline_transform_transform_proto_depIdxs = nil
}
