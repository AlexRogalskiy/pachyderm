// Code generated by protoc-gen-go.
// source: pfs/drive/btrfs/protolog.proto
// DO NOT EDIT!

/*
Package btrfs is a generated protocol buffer package.

It is generated from these files:
	pfs/drive/btrfs/protolog.proto

It has these top-level messages:
	SubvolumeCreate
	SubvolumeDelete
	SubvolumeExists
	SubvolumeSnapshot
	TransID
	SubvolumeList
	SubvolumeListLine
	SubvolumeFindNew
	SubvolumeFindNewLine
	Send
	Recv
*/
package btrfs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SubvolumeCreate struct {
	Path  string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *SubvolumeCreate) Reset()         { *m = SubvolumeCreate{} }
func (m *SubvolumeCreate) String() string { return proto.CompactTextString(m) }
func (*SubvolumeCreate) ProtoMessage()    {}

type SubvolumeDelete struct {
	Path  string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *SubvolumeDelete) Reset()         { *m = SubvolumeDelete{} }
func (m *SubvolumeDelete) String() string { return proto.CompactTextString(m) }
func (*SubvolumeDelete) ProtoMessage()    {}

type SubvolumeExists struct {
	Path   string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Result bool   `protobuf:"varint,2,opt,name=result" json:"result,omitempty"`
}

func (m *SubvolumeExists) Reset()         { *m = SubvolumeExists{} }
func (m *SubvolumeExists) String() string { return proto.CompactTextString(m) }
func (*SubvolumeExists) ProtoMessage()    {}

type SubvolumeSnapshot struct {
	Src      string `protobuf:"bytes,1,opt,name=src" json:"src,omitempty"`
	Dest     string `protobuf:"bytes,2,opt,name=dest" json:"dest,omitempty"`
	ReadOnly bool   `protobuf:"varint,3,opt,name=readOnly" json:"readOnly,omitempty"`
	Error    string `protobuf:"bytes,4,opt,name=error" json:"error,omitempty"`
}

func (m *SubvolumeSnapshot) Reset()         { *m = SubvolumeSnapshot{} }
func (m *SubvolumeSnapshot) String() string { return proto.CompactTextString(m) }
func (*SubvolumeSnapshot) ProtoMessage()    {}

type TransID struct {
	Path   string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Result string `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
	Error  string `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *TransID) Reset()         { *m = TransID{} }
func (m *TransID) String() string { return proto.CompactTextString(m) }
func (*TransID) ProtoMessage()    {}

type SubvolumeList struct {
	Path       string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	FromCommit string `protobuf:"bytes,2,opt,name=fromCommit" json:"fromCommit,omitempty"`
	Ascending  bool   `protobuf:"varint,3,opt,name=ascending" json:"ascending,omitempty"`
	Error      string `protobuf:"bytes,4,opt,name=error" json:"error,omitempty"`
}

func (m *SubvolumeList) Reset()         { *m = SubvolumeList{} }
func (m *SubvolumeList) String() string { return proto.CompactTextString(m) }
func (*SubvolumeList) ProtoMessage()    {}

type SubvolumeListLine struct {
	Line string `protobuf:"bytes,1,opt,name=line" json:"line,omitempty"`
}

func (m *SubvolumeListLine) Reset()         { *m = SubvolumeListLine{} }
func (m *SubvolumeListLine) String() string { return proto.CompactTextString(m) }
func (*SubvolumeListLine) ProtoMessage()    {}

type SubvolumeFindNew struct {
	Commit     string `protobuf:"bytes,1,opt,name=commit" json:"commit,omitempty"`
	FromCommit string `protobuf:"bytes,2,opt,name=fromCommit" json:"fromCommit,omitempty"`
	Error      string `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *SubvolumeFindNew) Reset()         { *m = SubvolumeFindNew{} }
func (m *SubvolumeFindNew) String() string { return proto.CompactTextString(m) }
func (*SubvolumeFindNew) ProtoMessage()    {}

type SubvolumeFindNewLine struct {
	Line string `protobuf:"bytes,1,opt,name=line" json:"line,omitempty"`
}

func (m *SubvolumeFindNewLine) Reset()         { *m = SubvolumeFindNewLine{} }
func (m *SubvolumeFindNewLine) String() string { return proto.CompactTextString(m) }
func (*SubvolumeFindNewLine) ProtoMessage()    {}

type Send struct {
	Path   string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Parent string `protobuf:"bytes,2,opt,name=parent" json:"parent,omitempty"`
	Error  string `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *Send) Reset()         { *m = Send{} }
func (m *Send) String() string { return proto.CompactTextString(m) }
func (*Send) ProtoMessage()    {}

type Recv struct {
	Path  string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *Recv) Reset()         { *m = Recv{} }
func (m *Recv) String() string { return proto.CompactTextString(m) }
func (*Recv) ProtoMessage()    {}
