// Code generated by protoc-gen-go.
// source: pfs/drive/drive.proto
// DO NOT EDIT!

/*
Package drive is a generated protocol buffer package.

It is generated from these files:
	pfs/drive/drive.proto

It has these top-level messages:
	BlockRef
	BlockRefs
	Changes
*/
package drive

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gengo/grpc-gateway/third_party/googleapis/google/api"
import pfs "github.com/pachyderm/pachyderm/src/pfs"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type BlockRef struct {
	Block     *pfs.Block `protobuf:"bytes,1,opt,name=block" json:"block,omitempty"`
	SizeBytes uint64     `protobuf:"varint,2,opt,name=size_bytes" json:"size_bytes,omitempty"`
}

func (m *BlockRef) Reset()         { *m = BlockRef{} }
func (m *BlockRef) String() string { return proto.CompactTextString(m) }
func (*BlockRef) ProtoMessage()    {}

func (m *BlockRef) GetBlock() *pfs.Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type BlockRefs struct {
	BlockRef []*BlockRef `protobuf:"bytes,1,rep,name=block_ref" json:"block_ref,omitempty"`
}

func (m *BlockRefs) Reset()         { *m = BlockRefs{} }
func (m *BlockRefs) String() string { return proto.CompactTextString(m) }
func (*BlockRefs) ProtoMessage()    {}

func (m *BlockRefs) GetBlockRef() []*BlockRef {
	if m != nil {
		return m.BlockRef
	}
	return nil
}

type Changes struct {
	Parent  *pfs.Commit           `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	Shard   uint64                `protobuf:"varint,2,opt,name=shard" json:"shard,omitempty"`
	Appends map[string]*BlockRefs `protobuf:"bytes,3,rep,name=appends" json:"appends,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Deletes map[string]bool       `protobuf:"bytes,4,rep,name=deletes" json:"deletes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *Changes) Reset()         { *m = Changes{} }
func (m *Changes) String() string { return proto.CompactTextString(m) }
func (*Changes) ProtoMessage()    {}

func (m *Changes) GetParent() *pfs.Commit {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *Changes) GetAppends() map[string]*BlockRefs {
	if m != nil {
		return m.Appends
	}
	return nil
}

func (m *Changes) GetDeletes() map[string]bool {
	if m != nil {
		return m.Deletes
	}
	return nil
}

func init() {
	proto.RegisterType((*BlockRef)(nil), "BlockRef")
	proto.RegisterType((*BlockRefs)(nil), "BlockRefs")
	proto.RegisterType((*Changes)(nil), "Changes")
}
