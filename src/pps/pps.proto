syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

package pps;

enum PipelineRunStatusType {
  PIPELINE_RUN_STATUS_TYPE_NONE = 0;
  PIPELINE_RUN_STATUS_TYPE_ADDED = 1;
  PIPELINE_RUN_STATUS_TYPE_STARTED = 2;
  PIPELINE_RUN_STATUS_TYPE_ERROR = 3;
  PIPELINE_RUN_STATUS_TYPE_SUCCESS = 4;
}

enum OutputStream {
  OUTPUT_STREAM_NONE = 0;
  OUTPUT_STREAM_STDOUT = 1;
  OUTPUT_STREAM_STDERR = 2;
}

message Input {
  repeated string node = 1;
  map<string, string> host = 2;
  map<string, string> pfs = 3;
}

message Output {
  map<string, string> host = 1;
  map<string, string> pfs = 2;
}

message Node {
  string service = 1;
  Input input = 2;
  Output output = 3;
  repeated string run = 4;
}

message DockerService {
  string image = 1;
  string build = 2;
  string dockerfile = 3;
}

message Pipeline {
  map<string, Node> name_to_node = 1;
  map<string, DockerService> name_to_docker_service = 2;
}

message GithubPipelineSource {
  string context_dir = 1;
  string user = 2;
  string repository = 3;
  string branch = 4;
  string commit_id = 5;
  string access_token = 6;
}

message PipelineSource {
  string id = 1;
  bool active = 2;
  map<string, string> tags = 3;
  oneof typed_pipeline_source {
    GithubPipelineSource github_pipeline_source = 4;
  }
}

message PipelineRun {
  string id = 1;
  PipelineSource pipeline_source = 2;
  Pipeline pipeline = 3;
}

message PipelineRunStatus {
  string pipeline_run_id = 1;
  PipelineRunStatusType pipeline_run_status_type = 2;
  google.protobuf.Timestamp timestamp = 3;
}

message PipelineRunContainer {
  string pipeline_run_id = 1;
  string container_id = 2;
  string node = 3;
}

message PipelineRunLog {
  string pipeline_run_id = 1;
  string container_id = 2;
  string node = 3;
  google.protobuf.Timestamp timestamp = 4;
  OutputStream output_stream = 5;
  bytes data = 6;
}

message PfsCommitMapping {
  string input_repository = 1;
  string input_commit_id = 2;
  string output_repository = 3;
  string output_commit_id = 4;
  google.protobuf.Timestamp timestamp = 5;
}

message CreatePipelineSourceRequest {
  PipelineSource pipeline_source = 1;
}

message CreatePipelineSourceResponse {
  PipelineSource pipeline_source = 1;
}

message GetPipelineSourceRequest {
  string pipeline_source_id = 1;
}

message GetPipelineSourceResponse {
  PipelineSource pipeline_source = 1;
}

message UpdatePipelineSourceRequest {
  PipelineSource pipeline_source = 1;
}

message UpdatePipelineSourceResponse {
  PipelineSource pipeline_source = 1;
}

message DeletePipelineSourceRequest {
  string pipeline_source_id = 1;
}

message ListPipelineSourcesRequest {
  map<string, string> tags = 1;
}

message ListPipelineSourcesResponse {
  repeated PipelineSource pipeline_source = 1;
}

message GetPipelineRequest {
  string pipeline_source_id = 1;
}

message GetPipelineResponse {
  Pipeline pipeline = 1;
}

message CreatePipelineRunRequest {
  string pipeline_source_id = 1;
}

message CreatePipelineRunResponse {
  PipelineRun pipeline_run = 1;
}

message StartPipelineRunRequest {
  string pipeline_run_id = 1;
}

message ListPipelineRunsRequest {
  string pipeline_source_id = 1;
}

message ListPipelineRunsResponse {
  repeated PipelineRun pipeline_run = 1;
}

message GetPipelineRunStatusRequest {
  string pipeline_run_id = 1;
  bool all = 2;
}

message GetPipelineRunStatusResponse {
  repeated PipelineRunStatus pipeline_run_status = 1;
}

message GetPipelineRunLogsRequest {
  string pipeline_run_id = 1;
  string node = 2;
}

message GetPipelineRunLogsResponse {
  repeated PipelineRunLog pipeline_run_log = 1;
}

service Api {
  rpc CreatePipelineSource(CreatePipelineSourceRequest) returns (CreatePipelineSourceResponse) {}
  rpc GetPipelineSource(GetPipelineSourceRequest) returns (GetPipelineSourceResponse) {}
  rpc UpdatePipelineSource(UpdatePipelineSourceRequest) returns (UpdatePipelineSourceResponse) {}
  rpc DeletePipelineSource(DeletePipelineSourceRequest) returns (google.protobuf.Empty) {}
  rpc ListPipelineSources(ListPipelineSourcesRequest) returns (ListPipelineSourcesResponse) {}
  rpc GetPipeline(GetPipelineRequest) returns (GetPipelineResponse) {} 
  rpc CreatePipelineRun(CreatePipelineRunRequest) returns (CreatePipelineRunResponse) {}
  rpc StartPipelineRun(StartPipelineRunRequest) returns (google.protobuf.Empty) {}
  rpc ListPipelineRuns(ListPipelineRunsRequest) returns (ListPipelineRunsResponse) {}
  rpc GetPipelineRunStatus(GetPipelineRunStatusRequest) returns (GetPipelineRunStatusResponse) {}
  rpc GetPipelineRunLogs(GetPipelineRunLogsRequest) returns (GetPipelineRunLogsResponse) {}
}
