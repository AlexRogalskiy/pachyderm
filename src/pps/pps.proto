syntax = "proto3";

import "google/protobuf/empty.proto";
import "pfs/pfs.proto";

package pachyderm.pps;

option go_package = "pps";

enum OutputStream {
  OUTPUT_STREAM_NONE = 0;
  OUTPUT_STREAM_STDOUT = 1;
  OUTPUT_STREAM_STDERR = 2;
  OUTPUT_STREAM_ALL = 3;
}

message Transform {
  string image = 1;
  repeated string cmd = 2;
}

message Job {
  string id = 1;
}

// TODO: add created at?
message JobInfo {
  Job job = 1;
  oneof spec {
    Transform transform = 2;
    Pipeline pipeline = 3;
  }
  uint64 parallelism = 4;
  repeated pfs.Commit input_commit = 5;
  pfs.Commit output_commit = 6;
}

message JobInfos {
  repeated JobInfo job_info = 1;
}

message Pipeline {
  string name = 1;
}

// TODO: add created at?
message PipelineInfo {
  Pipeline pipeline = 1;
  Transform transform = 2;
  uint64 parallelism = 3;
  repeated pfs.Repo input_repo = 4;
  pfs.Repo output_repo = 5;
}

message PipelineInfos {
  repeated PipelineInfo pipeline_info = 1;
}

message CreateJobRequest {
  oneof spec {
    Transform transform = 1;
    Pipeline pipeline = 2;
  }
  uint64 parallelism = 3;
  repeated pfs.Commit input_commit = 4;
  pfs.Commit output_parent = 5;
}

message InspectJobRequest {
  Job job = 1;
}

message ListJobRequest {
  Pipeline pipeline = 1; // nil means all pipelines
  pfs.Commit input = 2; // nil means all inputs
}

message StartJobRequest {
  Job job = 1;
}

message StartJobResponse {
    repeated pfs.Commit input_commit = 1;
    pfs.Commit output_commit = 2;
    pfs.Shard shard = 3;
}

message FinishJobRequest {
    Job job = 1;
    pfs.Shard shard = 2;
}

message CreatePipelineRequest {
  Pipeline pipeline = 1;
  Transform transform = 2;
  uint64 parallelism = 3;
  repeated pfs.Repo input_repo = 4;
  pfs.Repo output_repo = 5;
}

message InspectPipelineRequest {
  Pipeline pipeline = 1;
}

message ListPipelineRequest {
}

message DeletePipelineRequest {
  Pipeline pipeline = 1;
}

service JobAPI {
  rpc CreateJob(CreateJobRequest) returns (Job) {}
  rpc InspectJob(InspectJobRequest) returns (JobInfo) {}
  rpc ListJob(ListJobRequest) returns (JobInfos) {}
}

service InternalJobAPI {
    rpc StartJob(StartJobRequest) returns (StartJobResponse) {}
    rpc FinishJob(FinishJobRequest) returns (google.protobuf.Empty) {}
}

service PipelineAPI {
  rpc CreatePipeline(CreatePipelineRequest) returns (google.protobuf.Empty) {}
  rpc InspectPipeline(InspectPipelineRequest) returns (PipelineInfo) {}
  rpc ListPipeline(ListPipelineRequest) returns (PipelineInfos) {}
  rpc DeletePipeline(DeletePipelineRequest) returns (google.protobuf.Empty) {}
}
