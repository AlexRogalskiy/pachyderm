// Code generated by protoc-gen-go.
// source: pps.proto
// DO NOT EDIT!

/*
Package pps is a generated protocol buffer package.

It is generated from these files:
	pps.proto

It has these top-level messages:
	Node
	DockerService
	Element
	Pipeline
*/
package pps

import proto "github.com/golang/protobuf/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

type Node struct {
	Input  map[string]string `protobuf:"bytes,1,rep,name=input" json:"input,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Output map[string]string `protobuf:"bytes,2,rep,name=output" json:"output,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Run    []string          `protobuf:"bytes,3,rep,name=run" json:"run,omitempty"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}

func (m *Node) GetInput() map[string]string {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Node) GetOutput() map[string]string {
	if m != nil {
		return m.Output
	}
	return nil
}

type DockerService struct {
	Image      string `protobuf:"bytes,1,opt,name=image" json:"image,omitempty"`
	Build      string `protobuf:"bytes,2,opt,name=build" json:"build,omitempty"`
	Dockerfile string `protobuf:"bytes,3,opt,name=dockerfile" json:"dockerfile,omitempty"`
}

func (m *DockerService) Reset()         { *m = DockerService{} }
func (m *DockerService) String() string { return proto.CompactTextString(m) }
func (*DockerService) ProtoMessage()    {}

type Element struct {
	Name          string         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Path          string         `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Node          *Node          `protobuf:"bytes,3,opt,name=node" json:"node,omitempty"`
	DockerService *DockerService `protobuf:"bytes,4,opt,name=docker_service" json:"docker_service,omitempty"`
}

func (m *Element) Reset()         { *m = Element{} }
func (m *Element) String() string { return proto.CompactTextString(m) }
func (*Element) ProtoMessage()    {}

func (m *Element) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *Element) GetDockerService() *DockerService {
	if m != nil {
		return m.DockerService
	}
	return nil
}

type Pipeline struct {
	NameToElement map[string]*Element `protobuf:"bytes,1,rep,name=name_to_element" json:"name_to_element,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Pipeline) Reset()         { *m = Pipeline{} }
func (m *Pipeline) String() string { return proto.CompactTextString(m) }
func (*Pipeline) ProtoMessage()    {}

func (m *Pipeline) GetNameToElement() map[string]*Element {
	if m != nil {
		return m.NameToElement
	}
	return nil
}
