// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: client/admin/v1_10/auth/auth.proto

package auth

import (
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Scope (actually a "role" in canonical security nomenclature) represents a
// rough level of access that a principal has to a repo
type Scope int32

const (
	// To remove a user's scope from a repo, set their scope to NONE
	Scope_NONE   Scope = 0
	Scope_READER Scope = 1
	Scope_WRITER Scope = 2
	Scope_OWNER  Scope = 3
)

// Enum value maps for Scope.
var (
	Scope_name = map[int32]string{
		0: "NONE",
		1: "READER",
		2: "WRITER",
		3: "OWNER",
	}
	Scope_value = map[string]int32{
		"NONE":   0,
		"READER": 1,
		"WRITER": 2,
		"OWNER":  3,
	}
)

func (x Scope) Enum() *Scope {
	p := new(Scope)
	*p = x
	return p
}

func (x Scope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Scope) Descriptor() protoreflect.EnumDescriptor {
	return file_client_admin_v1_10_auth_auth_proto_enumTypes[0].Descriptor()
}

func (Scope) Type() protoreflect.EnumType {
	return &file_client_admin_v1_10_auth_auth_proto_enumTypes[0]
}

func (x Scope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Scope.Descriptor instead.
func (Scope) EnumDescriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{0}
}

type TokenInfo_TokenSource int32

const (
	TokenInfo_INVALID      TokenInfo_TokenSource = 0
	TokenInfo_AUTHENTICATE TokenInfo_TokenSource = 1 // returned by Authenticate()--non-revokeable
	TokenInfo_GET_TOKEN    TokenInfo_TokenSource = 2 // returned by GetToken()--revokeable.
)

// Enum value maps for TokenInfo_TokenSource.
var (
	TokenInfo_TokenSource_name = map[int32]string{
		0: "INVALID",
		1: "AUTHENTICATE",
		2: "GET_TOKEN",
	}
	TokenInfo_TokenSource_value = map[string]int32{
		"INVALID":      0,
		"AUTHENTICATE": 1,
		"GET_TOKEN":    2,
	}
)

func (x TokenInfo_TokenSource) Enum() *TokenInfo_TokenSource {
	p := new(TokenInfo_TokenSource)
	*p = x
	return p
}

func (x TokenInfo_TokenSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TokenInfo_TokenSource) Descriptor() protoreflect.EnumDescriptor {
	return file_client_admin_v1_10_auth_auth_proto_enumTypes[1].Descriptor()
}

func (TokenInfo_TokenSource) Type() protoreflect.EnumType {
	return &file_client_admin_v1_10_auth_auth_proto_enumTypes[1]
}

func (x TokenInfo_TokenSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TokenInfo_TokenSource.Descriptor instead.
func (TokenInfo_TokenSource) EnumDescriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{15, 0}
}

// ActivateRequest mirrors AuthenticateRequest. The caller is authenticated via
// GitHub OAuth, and then promoted to the cluster's first Admin. Afterwards, the
// caller can promote other users to Admin and remove themselves
type ActivateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If set, Pachyderm will authenticate the caller as this user.
	// - If set to a github user (i.e. it has a 'github:' prefix or no prefix)
	//   then Pachyderm will confirm that it matches the user associated with
	//   'github_token'
	// - If set to a robot user (i.e. it has a 'robot:' prefix), then Pachyderm
	//   will generate a new token for the robot user; this token will be the only
	//   way to administer this cluster until more admins are added.
	Subject string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	// This is the token returned by GitHub and used to authenticate the caller.
	// When Pachyderm is deployed locally, setting this value to a given string
	// will automatically authenticate the caller as a GitHub user whose username
	// is that string (unless this "looks like" a GitHub access code, in which
	// case Pachyderm does retrieve the corresponding GitHub username)
	GithubToken string `protobuf:"bytes,1,opt,name=github_token,json=githubToken,proto3" json:"github_token,omitempty"`
}

func (x *ActivateRequest) Reset() {
	*x = ActivateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateRequest) ProtoMessage() {}

func (x *ActivateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateRequest.ProtoReflect.Descriptor instead.
func (*ActivateRequest) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{0}
}

func (x *ActivateRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *ActivateRequest) GetGithubToken() string {
	if x != nil {
		return x.GithubToken
	}
	return ""
}

type ActivateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pach_token authenticates the caller with Pachyderm (if you want to perform
	// Pachyderm operations after auth has been activated as themselves, you must
	// present this token along with your regular request)
	PachToken string `protobuf:"bytes,1,opt,name=pach_token,json=pachToken,proto3" json:"pach_token,omitempty"`
}

func (x *ActivateResponse) Reset() {
	*x = ActivateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateResponse) ProtoMessage() {}

func (x *ActivateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateResponse.ProtoReflect.Descriptor instead.
func (*ActivateResponse) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{1}
}

func (x *ActivateResponse) GetPachToken() string {
	if x != nil {
		return x.PachToken
	}
	return ""
}

type DeactivateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeactivateRequest) Reset() {
	*x = DeactivateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateRequest) ProtoMessage() {}

func (x *DeactivateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateRequest.ProtoReflect.Descriptor instead.
func (*DeactivateRequest) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{2}
}

type DeactivateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeactivateResponse) Reset() {
	*x = DeactivateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateResponse) ProtoMessage() {}

func (x *DeactivateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateResponse.ProtoReflect.Descriptor instead.
func (*DeactivateResponse) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{3}
}

// IDProvider configures a single ID provider that can authenticate Pachyderm
// users
type IDProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name identifies this authentication backend in Pachyderm.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Description is a human-readable description of this authentication
	// backend. It's ignored by Pachyderm, but exists for the benefit of users
	// configuring Pachyderm's auth system.
	Description string                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Saml        *IDProvider_SAMLOptions   `protobuf:"bytes,3,opt,name=saml,proto3" json:"saml,omitempty"`
	Github      *IDProvider_GitHubOptions `protobuf:"bytes,4,opt,name=github,proto3" json:"github,omitempty"`
}

func (x *IDProvider) Reset() {
	*x = IDProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDProvider) ProtoMessage() {}

func (x *IDProvider) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDProvider.ProtoReflect.Descriptor instead.
func (*IDProvider) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{4}
}

func (x *IDProvider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IDProvider) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *IDProvider) GetSaml() *IDProvider_SAMLOptions {
	if x != nil {
		return x.Saml
	}
	return nil
}

func (x *IDProvider) GetGithub() *IDProvider_GitHubOptions {
	if x != nil {
		return x.Github
	}
	return nil
}

// Configure Pachyderm's auth system (particularly authentication backends
type AuthConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// live_config_version identifies the version of a given pachyderm cluster's
	// current auth configuration; if a user tries to write an auth configuration
	// where live_config_version doesn't match the version of the cluster's
	// current config, the write will fail. This allows for safe
	// read+modify+write config changes.
	LiveConfigVersion int64 `protobuf:"varint,1,opt,name=live_config_version,json=liveConfigVersion,proto3" json:"live_config_version,omitempty"`
	// id_providers describes external ID providers that can authenticate
	// Pachyderm users (e.g. GitHub, Okta, etc)
	IdProviders    []*IDProvider                  `protobuf:"bytes,2,rep,name=id_providers,json=idProviders,proto3" json:"id_providers,omitempty"`
	SamlSvcOptions *AuthConfig_SAMLServiceOptions `protobuf:"bytes,3,opt,name=saml_svc_options,json=samlSvcOptions,proto3" json:"saml_svc_options,omitempty"`
}

func (x *AuthConfig) Reset() {
	*x = AuthConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthConfig) ProtoMessage() {}

func (x *AuthConfig) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthConfig.ProtoReflect.Descriptor instead.
func (*AuthConfig) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{5}
}

func (x *AuthConfig) GetLiveConfigVersion() int64 {
	if x != nil {
		return x.LiveConfigVersion
	}
	return 0
}

func (x *AuthConfig) GetIdProviders() []*IDProvider {
	if x != nil {
		return x.IdProviders
	}
	return nil
}

func (x *AuthConfig) GetSamlSvcOptions() *AuthConfig_SAMLServiceOptions {
	if x != nil {
		return x.SamlSvcOptions
	}
	return nil
}

type GetConfigurationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetConfigurationRequest) Reset() {
	*x = GetConfigurationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigurationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigurationRequest) ProtoMessage() {}

func (x *GetConfigurationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigurationRequest.ProtoReflect.Descriptor instead.
func (*GetConfigurationRequest) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{6}
}

type GetConfigurationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration *AuthConfig `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
}

func (x *GetConfigurationResponse) Reset() {
	*x = GetConfigurationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigurationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigurationResponse) ProtoMessage() {}

func (x *GetConfigurationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigurationResponse.ProtoReflect.Descriptor instead.
func (*GetConfigurationResponse) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{7}
}

func (x *GetConfigurationResponse) GetConfiguration() *AuthConfig {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type SetConfigurationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration *AuthConfig `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
}

func (x *SetConfigurationRequest) Reset() {
	*x = SetConfigurationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConfigurationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigurationRequest) ProtoMessage() {}

func (x *SetConfigurationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigurationRequest.ProtoReflect.Descriptor instead.
func (*SetConfigurationRequest) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{8}
}

func (x *SetConfigurationRequest) GetConfiguration() *AuthConfig {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type SetConfigurationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetConfigurationResponse) Reset() {
	*x = SetConfigurationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConfigurationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigurationResponse) ProtoMessage() {}

func (x *SetConfigurationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigurationResponse.ProtoReflect.Descriptor instead.
func (*SetConfigurationResponse) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{9}
}

// Get the current list of cluster admins
type GetAdminsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAdminsRequest) Reset() {
	*x = GetAdminsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminsRequest) ProtoMessage() {}

func (x *GetAdminsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminsRequest.ProtoReflect.Descriptor instead.
func (*GetAdminsRequest) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{10}
}

type GetAdminsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// admins contains the list of cluster admins
	Admins []string `protobuf:"bytes,1,rep,name=admins,proto3" json:"admins,omitempty"`
}

func (x *GetAdminsResponse) Reset() {
	*x = GetAdminsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminsResponse) ProtoMessage() {}

func (x *GetAdminsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminsResponse.ProtoReflect.Descriptor instead.
func (*GetAdminsResponse) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{11}
}

func (x *GetAdminsResponse) GetAdmins() []string {
	if x != nil {
		return x.Admins
	}
	return nil
}

// Add or remove cluster admins
type ModifyAdminsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Add    []string `protobuf:"bytes,1,rep,name=add,proto3" json:"add,omitempty"`
	Remove []string `protobuf:"bytes,2,rep,name=remove,proto3" json:"remove,omitempty"`
}

func (x *ModifyAdminsRequest) Reset() {
	*x = ModifyAdminsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyAdminsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyAdminsRequest) ProtoMessage() {}

func (x *ModifyAdminsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyAdminsRequest.ProtoReflect.Descriptor instead.
func (*ModifyAdminsRequest) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{12}
}

func (x *ModifyAdminsRequest) GetAdd() []string {
	if x != nil {
		return x.Add
	}
	return nil
}

func (x *ModifyAdminsRequest) GetRemove() []string {
	if x != nil {
		return x.Remove
	}
	return nil
}

type ModifyAdminsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModifyAdminsResponse) Reset() {
	*x = ModifyAdminsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyAdminsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyAdminsResponse) ProtoMessage() {}

func (x *ModifyAdminsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyAdminsResponse.ProtoReflect.Descriptor instead.
func (*ModifyAdminsResponse) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{13}
}

// OTPInfo is the analogue of 'TokenInfo' for Authentication Codes (short-lived,
// one-time-use codes that are passed to the frontend and then exchanged for
// longer-lived tokens)
type OTPInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Subject (i.e. Pachyderm account) that a given OTP authenticates. This may
	// be copied into the 'subject' field of a TokenInfo, and therefore has the
	// same format, with the same prefixes.
	Subject string `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	// session_expiration indicates when the subject's session expires, a.k.a.
	// when the Token to which this OTP converts expires (likely later than this
	// OTP expires, but never earlier).
	SessionExpiration *timestamp.Timestamp `protobuf:"bytes,2,opt,name=session_expiration,json=sessionExpiration,proto3" json:"session_expiration,omitempty"`
}

func (x *OTPInfo) Reset() {
	*x = OTPInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTPInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTPInfo) ProtoMessage() {}

func (x *OTPInfo) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTPInfo.ProtoReflect.Descriptor instead.
func (*OTPInfo) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{14}
}

func (x *OTPInfo) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *OTPInfo) GetSessionExpiration() *timestamp.Timestamp {
	if x != nil {
		return x.SessionExpiration
	}
	return nil
}

// TokenInfo is the 'value' of an auth token 'key' in the 'tokens' collection
type TokenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Subject (i.e. Pachyderm account) that a given token authorizes. Prefixed
	// with "github:" or "robot:" to distinguish the two classes of
	// Subject in Pachyderm
	Subject string                `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Source  TokenInfo_TokenSource `protobuf:"varint,2,opt,name=source,proto3,enum=auth_1_10.TokenInfo_TokenSource" json:"source,omitempty"`
}

func (x *TokenInfo) Reset() {
	*x = TokenInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfo) ProtoMessage() {}

func (x *TokenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfo.ProtoReflect.Descriptor instead.
func (*TokenInfo) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{15}
}

func (x *TokenInfo) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *TokenInfo) GetSource() TokenInfo_TokenSource {
	if x != nil {
		return x.Source
	}
	return TokenInfo_INVALID
}

type AuthenticateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This is the token returned by GitHub and used to authenticate the caller.
	// When Pachyderm is deployed locally, setting this value to a given string
	// will automatically authenticate the caller as a GitHub user whose username
	// is that string (unless this "looks like" a GitHub access code, in which
	// case Pachyderm does retrieve the corresponding GitHub username)
	GithubToken string `protobuf:"bytes,1,opt,name=github_token,json=githubToken,proto3" json:"github_token,omitempty"`
	// This is a short-lived, one-time-use password generated by Pachyderm, for
	// the purpose of propagating authentication to new clients (e.g. from the
	// dash to pachd)
	OneTimePassword string `protobuf:"bytes,2,opt,name=one_time_password,json=oneTimePassword,proto3" json:"one_time_password,omitempty"`
}

func (x *AuthenticateRequest) Reset() {
	*x = AuthenticateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateRequest) ProtoMessage() {}

func (x *AuthenticateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateRequest) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{16}
}

func (x *AuthenticateRequest) GetGithubToken() string {
	if x != nil {
		return x.GithubToken
	}
	return ""
}

func (x *AuthenticateRequest) GetOneTimePassword() string {
	if x != nil {
		return x.OneTimePassword
	}
	return ""
}

type AuthenticateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pach_token authenticates the caller with Pachyderm (if you want to perform
	// Pachyderm operations after auth has been activated as themselves, you must
	// present this token along with your regular request)
	PachToken string `protobuf:"bytes,1,opt,name=pach_token,json=pachToken,proto3" json:"pach_token,omitempty"`
}

func (x *AuthenticateResponse) Reset() {
	*x = AuthenticateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateResponse) ProtoMessage() {}

func (x *AuthenticateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateResponse.ProtoReflect.Descriptor instead.
func (*AuthenticateResponse) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{17}
}

func (x *AuthenticateResponse) GetPachToken() string {
	if x != nil {
		return x.PachToken
	}
	return ""
}

type WhoAmIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WhoAmIRequest) Reset() {
	*x = WhoAmIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhoAmIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhoAmIRequest) ProtoMessage() {}

func (x *WhoAmIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhoAmIRequest.ProtoReflect.Descriptor instead.
func (*WhoAmIRequest) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{18}
}

type WhoAmIResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	IsAdmin  bool   `protobuf:"varint,2,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	Ttl      int64  `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *WhoAmIResponse) Reset() {
	*x = WhoAmIResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhoAmIResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhoAmIResponse) ProtoMessage() {}

func (x *WhoAmIResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhoAmIResponse.ProtoReflect.Descriptor instead.
func (*WhoAmIResponse) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{19}
}

func (x *WhoAmIResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *WhoAmIResponse) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *WhoAmIResponse) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type ACL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// principal -> scope. All principals are the default principal of a Pachyderm
	// subject (i.e. all keys in this map are strings prefixed with either
	// "github:" or "robot:", followed by the name of a GitHub user, all of whom
	// are Pachyderm subjects, or a Pachyderm robot user)
	Entries map[string]Scope `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=auth_1_10.Scope"`
}

func (x *ACL) Reset() {
	*x = ACL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACL) ProtoMessage() {}

func (x *ACL) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACL.ProtoReflect.Descriptor instead.
func (*ACL) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{20}
}

func (x *ACL) GetEntries() map[string]Scope {
	if x != nil {
		return x.Entries
	}
	return nil
}

type Users struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usernames map[string]bool `protobuf:"bytes,1,rep,name=usernames,proto3" json:"usernames,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *Users) Reset() {
	*x = Users{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Users) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Users) ProtoMessage() {}

func (x *Users) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Users.ProtoReflect.Descriptor instead.
func (*Users) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{21}
}

func (x *Users) GetUsernames() map[string]bool {
	if x != nil {
		return x.Usernames
	}
	return nil
}

type Groups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups map[string]bool `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *Groups) Reset() {
	*x = Groups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Groups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Groups) ProtoMessage() {}

func (x *Groups) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Groups.ProtoReflect.Descriptor instead.
func (*Groups) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{22}
}

func (x *Groups) GetGroups() map[string]bool {
	if x != nil {
		return x.Groups
	}
	return nil
}

type AuthorizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// repo is the object that the caller wants to access
	Repo string `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
	// scope is the access level that the caller needs to perform an action
	Scope Scope `protobuf:"varint,2,opt,name=scope,proto3,enum=auth_1_10.Scope" json:"scope,omitempty"`
}

func (x *AuthorizeRequest) Reset() {
	*x = AuthorizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeRequest) ProtoMessage() {}

func (x *AuthorizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeRequest.ProtoReflect.Descriptor instead.
func (*AuthorizeRequest) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{23}
}

func (x *AuthorizeRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *AuthorizeRequest) GetScope() Scope {
	if x != nil {
		return x.Scope
	}
	return Scope_NONE
}

type AuthorizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// authorized is true if the caller has at least
	// 'AuthorizeRequest.scope'-level access to 'AuthorizeRequest.repo', and false
	// otherwise
	Authorized bool `protobuf:"varint,1,opt,name=authorized,proto3" json:"authorized,omitempty"`
}

func (x *AuthorizeResponse) Reset() {
	*x = AuthorizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeResponse) ProtoMessage() {}

func (x *AuthorizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeResponse.ProtoReflect.Descriptor instead.
func (*AuthorizeResponse) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{24}
}

func (x *AuthorizeResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

type GetScopeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// username is the principal (some of which belong to robots rather than
	// users, but the name is preserved for now to provide compatibility with the
	// pachyderm dash) whose access level is queried. To query the access level
	// of a robot user, the caller must prefix username with "robot:". If
	// 'username' has no prefix (i.e. no ":"), then it's assumed to be a github
	// user's principal.
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// repos are the objects to which 'username's access level is being queried
	Repos []string `protobuf:"bytes,2,rep,name=repos,proto3" json:"repos,omitempty"`
}

func (x *GetScopeRequest) Reset() {
	*x = GetScopeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScopeRequest) ProtoMessage() {}

func (x *GetScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScopeRequest.ProtoReflect.Descriptor instead.
func (*GetScopeRequest) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{25}
}

func (x *GetScopeRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetScopeRequest) GetRepos() []string {
	if x != nil {
		return x.Repos
	}
	return nil
}

type GetScopeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// scopes (actually a "role"--see "Scope") are the access level that
	// 'GetScopeRequest.username' has to each repo in 'GetScopeRequest.repos', in
	// the same order that repos appeared in 'repos'.
	Scopes []Scope `protobuf:"varint,1,rep,packed,name=scopes,proto3,enum=auth_1_10.Scope" json:"scopes,omitempty"`
}

func (x *GetScopeResponse) Reset() {
	*x = GetScopeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScopeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScopeResponse) ProtoMessage() {}

func (x *GetScopeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScopeResponse.ProtoReflect.Descriptor instead.
func (*GetScopeResponse) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{26}
}

func (x *GetScopeResponse) GetScopes() []Scope {
	if x != nil {
		return x.Scopes
	}
	return nil
}

type SetScopeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// username is the principal (some of which belong to robots rather than
	// users, but the name is preserved for now to provide compatibility with the
	// pachyderm dash) whose access is being granted/revoked. As with
	// GetScopeRequest, to set the access level of a robot user, the caller must
	// prefix username with "robot:". If 'username' has no prefix (i.e. no ":"),
	// then it's assumed to be a github user's principal.
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// repo is the object to which access is being granted/revoked
	Repo string `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	// scope (actually a "role"--see "Scope") is the access level that the owner
	// of 'principal' will now have
	Scope Scope `protobuf:"varint,3,opt,name=scope,proto3,enum=auth_1_10.Scope" json:"scope,omitempty"`
}

func (x *SetScopeRequest) Reset() {
	*x = SetScopeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetScopeRequest) ProtoMessage() {}

func (x *SetScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetScopeRequest.ProtoReflect.Descriptor instead.
func (*SetScopeRequest) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{27}
}

func (x *SetScopeRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SetScopeRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *SetScopeRequest) GetScope() Scope {
	if x != nil {
		return x.Scope
	}
	return Scope_NONE
}

type SetScopeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetScopeResponse) Reset() {
	*x = SetScopeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetScopeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetScopeResponse) ProtoMessage() {}

func (x *SetScopeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetScopeResponse.ProtoReflect.Descriptor instead.
func (*SetScopeResponse) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{28}
}

type GetACLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repo string `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
}

func (x *GetACLRequest) Reset() {
	*x = GetACLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetACLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetACLRequest) ProtoMessage() {}

func (x *GetACLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetACLRequest.ProtoReflect.Descriptor instead.
func (*GetACLRequest) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{29}
}

func (x *GetACLRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

type ACLEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// username is the principal posessing this level of access to this ACL's
	// repo (despite the name, this principal may be for a human github user or a
	// pachyderm robot)
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// scope is the level of access that the owner of 'principal' has to this
	// ACL's repo (actually a role in typical security terminology)
	Scope Scope `protobuf:"varint,2,opt,name=scope,proto3,enum=auth_1_10.Scope" json:"scope,omitempty"`
}

func (x *ACLEntry) Reset() {
	*x = ACLEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACLEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACLEntry) ProtoMessage() {}

func (x *ACLEntry) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACLEntry.ProtoReflect.Descriptor instead.
func (*ACLEntry) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{30}
}

func (x *ACLEntry) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ACLEntry) GetScope() Scope {
	if x != nil {
		return x.Scope
	}
	return Scope_NONE
}

// GetACLReponse contains the list of entries on a Pachyderm ACL.
//
// To avoid migration pain with the Pachyderm dash the list of user principal
// entries and robot principal entries are separate. This way, no prefix or
// other disambiguating device is needed in 'entries' to separate user
// principals from robot principals (which would confuse the dash). Instead,
// the dash can simply ignore robot principals.
type GetACLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// entries contains all [user principal] -> [role] mappings. This is separate
	// from robot_entries to avoid migration pain the Pachyderm dashboard
	Entries []*ACLEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	// robot_entries contains all [robot principal] -> [role] mappings. This is
	// separate from entries to be unambiguous (all keys are robot principals, but
	// have no prefixes) while avoiding migration pain in the Pachyderm dashboard.
	RobotEntries []*ACLEntry `protobuf:"bytes,2,rep,name=robot_entries,json=robotEntries,proto3" json:"robot_entries,omitempty"`
}

func (x *GetACLResponse) Reset() {
	*x = GetACLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetACLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetACLResponse) ProtoMessage() {}

func (x *GetACLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetACLResponse.ProtoReflect.Descriptor instead.
func (*GetACLResponse) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{31}
}

func (x *GetACLResponse) GetEntries() []*ACLEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *GetACLResponse) GetRobotEntries() []*ACLEntry {
	if x != nil {
		return x.RobotEntries
	}
	return nil
}

type SetACLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repo    string      `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
	Entries []*ACLEntry `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *SetACLRequest) Reset() {
	*x = SetACLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetACLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetACLRequest) ProtoMessage() {}

func (x *SetACLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetACLRequest.ProtoReflect.Descriptor instead.
func (*SetACLRequest) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{32}
}

func (x *SetACLRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *SetACLRequest) GetEntries() []*ACLEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type SetACLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetACLResponse) Reset() {
	*x = SetACLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetACLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetACLResponse) ProtoMessage() {}

func (x *SetACLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetACLResponse.ProtoReflect.Descriptor instead.
func (*SetACLResponse) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{33}
}

type GetAuthTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The returned token will allow the caller to access resources as this
	// subject
	Subject string `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	// ttl indicates the requested (approximate) remaining lifetime of this token,
	// in seconds
	Ttl int64 `protobuf:"varint,2,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *GetAuthTokenRequest) Reset() {
	*x = GetAuthTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthTokenRequest) ProtoMessage() {}

func (x *GetAuthTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthTokenRequest.ProtoReflect.Descriptor instead.
func (*GetAuthTokenRequest) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{34}
}

func (x *GetAuthTokenRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *GetAuthTokenRequest) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type GetAuthTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A canonicalized version of the subject in the request
	Subject string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	// A new auth token for the user in 'GetAuthTokenRequest.Subject' token
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetAuthTokenResponse) Reset() {
	*x = GetAuthTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthTokenResponse) ProtoMessage() {}

func (x *GetAuthTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthTokenResponse.ProtoReflect.Descriptor instead.
func (*GetAuthTokenResponse) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{35}
}

func (x *GetAuthTokenResponse) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *GetAuthTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ExtendAuthTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// token indicates the Pachyderm token whose TTL is being extended
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// ttl indicates the new TTL of 'token' (if it's longer than the existing TTL)
	Ttl int64 `protobuf:"varint,2,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *ExtendAuthTokenRequest) Reset() {
	*x = ExtendAuthTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtendAuthTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendAuthTokenRequest) ProtoMessage() {}

func (x *ExtendAuthTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendAuthTokenRequest.ProtoReflect.Descriptor instead.
func (*ExtendAuthTokenRequest) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{36}
}

func (x *ExtendAuthTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ExtendAuthTokenRequest) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type ExtendAuthTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExtendAuthTokenResponse) Reset() {
	*x = ExtendAuthTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtendAuthTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendAuthTokenResponse) ProtoMessage() {}

func (x *ExtendAuthTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendAuthTokenResponse.ProtoReflect.Descriptor instead.
func (*ExtendAuthTokenResponse) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{37}
}

type RevokeAuthTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *RevokeAuthTokenRequest) Reset() {
	*x = RevokeAuthTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeAuthTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeAuthTokenRequest) ProtoMessage() {}

func (x *RevokeAuthTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeAuthTokenRequest.ProtoReflect.Descriptor instead.
func (*RevokeAuthTokenRequest) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{38}
}

func (x *RevokeAuthTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type RevokeAuthTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RevokeAuthTokenResponse) Reset() {
	*x = RevokeAuthTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeAuthTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeAuthTokenResponse) ProtoMessage() {}

func (x *RevokeAuthTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeAuthTokenResponse.ProtoReflect.Descriptor instead.
func (*RevokeAuthTokenResponse) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{39}
}

type SetGroupsForUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Groups   []string `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *SetGroupsForUserRequest) Reset() {
	*x = SetGroupsForUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupsForUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupsForUserRequest) ProtoMessage() {}

func (x *SetGroupsForUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupsForUserRequest.ProtoReflect.Descriptor instead.
func (*SetGroupsForUserRequest) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{40}
}

func (x *SetGroupsForUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SetGroupsForUserRequest) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

type SetGroupsForUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetGroupsForUserResponse) Reset() {
	*x = SetGroupsForUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupsForUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupsForUserResponse) ProtoMessage() {}

func (x *SetGroupsForUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupsForUserResponse.ProtoReflect.Descriptor instead.
func (*SetGroupsForUserResponse) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{41}
}

type ModifyMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group  string   `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Add    []string `protobuf:"bytes,2,rep,name=add,proto3" json:"add,omitempty"`
	Remove []string `protobuf:"bytes,3,rep,name=remove,proto3" json:"remove,omitempty"`
}

func (x *ModifyMembersRequest) Reset() {
	*x = ModifyMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyMembersRequest) ProtoMessage() {}

func (x *ModifyMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyMembersRequest.ProtoReflect.Descriptor instead.
func (*ModifyMembersRequest) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{42}
}

func (x *ModifyMembersRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *ModifyMembersRequest) GetAdd() []string {
	if x != nil {
		return x.Add
	}
	return nil
}

func (x *ModifyMembersRequest) GetRemove() []string {
	if x != nil {
		return x.Remove
	}
	return nil
}

type ModifyMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModifyMembersResponse) Reset() {
	*x = ModifyMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyMembersResponse) ProtoMessage() {}

func (x *ModifyMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyMembersResponse.ProtoReflect.Descriptor instead.
func (*ModifyMembersResponse) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{43}
}

type GetGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *GetGroupsRequest) Reset() {
	*x = GetGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsRequest) ProtoMessage() {}

func (x *GetGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsRequest.ProtoReflect.Descriptor instead.
func (*GetGroupsRequest) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{44}
}

func (x *GetGroupsRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type GetGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []string `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *GetGroupsResponse) Reset() {
	*x = GetGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsResponse) ProtoMessage() {}

func (x *GetGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsResponse.ProtoReflect.Descriptor instead.
func (*GetGroupsResponse) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{45}
}

func (x *GetGroupsResponse) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GetUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GetUsersRequest) Reset() {
	*x = GetUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersRequest) ProtoMessage() {}

func (x *GetUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersRequest.ProtoReflect.Descriptor instead.
func (*GetUsersRequest) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{46}
}

func (x *GetUsersRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type GetUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usernames []string `protobuf:"bytes,1,rep,name=usernames,proto3" json:"usernames,omitempty"`
}

func (x *GetUsersResponse) Reset() {
	*x = GetUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersResponse) ProtoMessage() {}

func (x *GetUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersResponse.ProtoReflect.Descriptor instead.
func (*GetUsersResponse) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{47}
}

func (x *GetUsersResponse) GetUsernames() []string {
	if x != nil {
		return x.Usernames
	}
	return nil
}

// GetOneTimePassword allows users to generate short-lived (~30s) tokens that
// can be passed to Authenticate() (via AuthenticateRequest.one_time_password)
// and exchanged for a longer-lived pachyderm token. This is more secure than
// GetAuthToken, which produces long-lived authorization tokens.
type GetOneTimePasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If the caller is an admin, GetOneTimePassword() can return a code for
	// any user (useful for testing).
	// If the caller is not an admin, GetOneTimePassword() will return an
	// authentication code for the caller if username is unset or set to the
	// caller's username (and will return an error otherwise)
	Subject string `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	// ttl indicates the requested (approximate) remaining lifetime of this token,
	// in seconds
	Ttl int64 `protobuf:"varint,2,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *GetOneTimePasswordRequest) Reset() {
	*x = GetOneTimePasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneTimePasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneTimePasswordRequest) ProtoMessage() {}

func (x *GetOneTimePasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneTimePasswordRequest.ProtoReflect.Descriptor instead.
func (*GetOneTimePasswordRequest) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{48}
}

func (x *GetOneTimePasswordRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *GetOneTimePasswordRequest) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type GetOneTimePasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 'code' is the string that must be presented in
	// AuthenticateRequest.one_time_password to login as
	// GetOneTimePasswordRequest.subject
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// expiration is the time at which the token in 'code' will expire
	OtpExpiration *timestamp.Timestamp `protobuf:"bytes,2,opt,name=otp_expiration,json=otpExpiration,proto3" json:"otp_expiration,omitempty"`
}

func (x *GetOneTimePasswordResponse) Reset() {
	*x = GetOneTimePasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneTimePasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneTimePasswordResponse) ProtoMessage() {}

func (x *GetOneTimePasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneTimePasswordResponse.ProtoReflect.Descriptor instead.
func (*GetOneTimePasswordResponse) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{49}
}

func (x *GetOneTimePasswordResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetOneTimePasswordResponse) GetOtpExpiration() *timestamp.Timestamp {
	if x != nil {
		return x.OtpExpiration
	}
	return nil
}

// SAMLOptions describes a SAML-based identity provider
type IDProvider_SAMLOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// metadata_url is the URL of the SAML ID provider's metadata service
	// (which Pachd can query to get more info about the SAML ID provider)
	MetadataUrl string `protobuf:"bytes,1,opt,name=metadata_url,json=metadataUrl,proto3" json:"metadata_url,omitempty"`
	// metadata_xml is a direct reproduction of the ID provider's metadata.
	// Users can set this field in the argument to SetConfig if the ID provider
	// can't be reached from pachd (e.g. because it's on a separate network to
	// which Pachyderm users also have access) or for testing.  Exactly one of
	// metadata_url and metadata_xml should be set in calls to SetConfig, but
	// internally, if metadata_url is set, the result of scraping the metadata
	// URL will be placed here in the result from GetConfig().
	MetadataXml []byte `protobuf:"bytes,2,opt,name=metadata_xml,json=metadataXml,proto3" json:"metadata_xml,omitempty"`
	// If this ID provider supports sending group memberships via attribute,
	// then users can set group_attribute to the SAML attribute that indicates
	// group mmbership, and Pachyderm will update users' group memberships when
	// they authenticate.
	GroupAttribute string `protobuf:"bytes,3,opt,name=group_attribute,json=groupAttribute,proto3" json:"group_attribute,omitempty"`
}

func (x *IDProvider_SAMLOptions) Reset() {
	*x = IDProvider_SAMLOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDProvider_SAMLOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDProvider_SAMLOptions) ProtoMessage() {}

func (x *IDProvider_SAMLOptions) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDProvider_SAMLOptions.ProtoReflect.Descriptor instead.
func (*IDProvider_SAMLOptions) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{4, 0}
}

func (x *IDProvider_SAMLOptions) GetMetadataUrl() string {
	if x != nil {
		return x.MetadataUrl
	}
	return ""
}

func (x *IDProvider_SAMLOptions) GetMetadataXml() []byte {
	if x != nil {
		return x.MetadataXml
	}
	return nil
}

func (x *IDProvider_SAMLOptions) GetGroupAttribute() string {
	if x != nil {
		return x.GroupAttribute
	}
	return ""
}

// GitHubOptions is an empty protobuf message whose presence in the IDProvider
// of an AuthConfig indicates that GitHub auth should be enabled.
type IDProvider_GitHubOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IDProvider_GitHubOptions) Reset() {
	*x = IDProvider_GitHubOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDProvider_GitHubOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDProvider_GitHubOptions) ProtoMessage() {}

func (x *IDProvider_GitHubOptions) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDProvider_GitHubOptions.ProtoReflect.Descriptor instead.
func (*IDProvider_GitHubOptions) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{4, 1}
}

// saml_svc_options configures the SAML services (Assertion Consumer Service
// and Metadata Service) that Pachd can export.
type AuthConfig_SAMLServiceOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// acs is the URL of Pachd's Assertion Consumer Service (i.e. where SAML ID
	// providers can send SAMLResponses to Pachd). If Pachyderm is running in a
	// private cluster, the cluster admin would be responsible for setting up a
	// domain name/proxy to resolve to pachd:654/acs
	AcsUrl string `protobuf:"bytes,1,opt,name=acs_url,json=acsUrl,proto3" json:"acs_url,omitempty"`
	// metadata_url is the public URL of Pachd's SAML metadata service (some
	// SAML ID providers will query this for information about Pachyderm's SAML
	// implementation and use it to idenfity Pachyderm as a service provider).
	// If Pachyderm is running in a private cluster, the cluster admin would be
	// responsible for creating this URL (which must resolve to
	// pachd:654/saml/metadata)
	MetadataUrl string `protobuf:"bytes,2,opt,name=metadata_url,json=metadataUrl,proto3" json:"metadata_url,omitempty"`
	// dash_url is the public address of this cluster's Pachyderm
	// dashboard, if one exists; this option determines where users will be
	// redirected after successfully authenticating
	DashUrl string `protobuf:"bytes,3,opt,name=dash_url,json=dashUrl,proto3" json:"dash_url,omitempty"`
	// session_duration determines the duration of SAML-IdP-authenticated user
	// sessions (specified as a Golang time duration, e.g. "24h" or "600m"). If
	// unset, user sessions last 24 hours (a short default, as SAML assertions
	// may contain group memberships that need to be refreshed)
	SessionDuration string `protobuf:"bytes,4,opt,name=session_duration,json=sessionDuration,proto3" json:"session_duration,omitempty"`
	// debug_logging determines whether pachd emits verbose logs (including
	// SAML credentials) as it receives them, which may be helpful for
	// debugging. This will probably not be present in any official releases.
	DebugLogging bool `protobuf:"varint,5,opt,name=debug_logging,json=debugLogging,proto3" json:"debug_logging,omitempty"`
}

func (x *AuthConfig_SAMLServiceOptions) Reset() {
	*x = AuthConfig_SAMLServiceOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthConfig_SAMLServiceOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthConfig_SAMLServiceOptions) ProtoMessage() {}

func (x *AuthConfig_SAMLServiceOptions) ProtoReflect() protoreflect.Message {
	mi := &file_client_admin_v1_10_auth_auth_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthConfig_SAMLServiceOptions.ProtoReflect.Descriptor instead.
func (*AuthConfig_SAMLServiceOptions) Descriptor() ([]byte, []int) {
	return file_client_admin_v1_10_auth_auth_proto_rawDescGZIP(), []int{5, 0}
}

func (x *AuthConfig_SAMLServiceOptions) GetAcsUrl() string {
	if x != nil {
		return x.AcsUrl
	}
	return ""
}

func (x *AuthConfig_SAMLServiceOptions) GetMetadataUrl() string {
	if x != nil {
		return x.MetadataUrl
	}
	return ""
}

func (x *AuthConfig_SAMLServiceOptions) GetDashUrl() string {
	if x != nil {
		return x.DashUrl
	}
	return ""
}

func (x *AuthConfig_SAMLServiceOptions) GetSessionDuration() string {
	if x != nil {
		return x.SessionDuration
	}
	return ""
}

func (x *AuthConfig_SAMLServiceOptions) GetDebugLogging() bool {
	if x != nil {
		return x.DebugLogging
	}
	return false
}

var File_client_admin_v1_10_auth_auth_proto protoreflect.FileDescriptor

var file_client_admin_v1_10_auth_auth_proto_rawDesc = []byte{
	0x0a, 0x22, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76,
	0x31, 0x5f, 0x31, 0x30, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x1a,
	0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5f, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x32, 0x0a, 0x0c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xe2, 0xde, 0x1f, 0x0b, 0x47,
	0x69, 0x74, 0x48, 0x75, 0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0b, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x31, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x63, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x61, 0x63, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x14, 0x0a, 0x12, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xfe, 0x02, 0x0a, 0x0a, 0x49, 0x44, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x04, 0x73, 0x61,
	0x6d, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x31, 0x5f, 0x31, 0x30, 0x2e, 0x49, 0x44, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x53, 0x41, 0x4d, 0x4c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x08, 0xe2, 0xde, 0x1f,
	0x04, 0x53, 0x41, 0x4d, 0x4c, 0x52, 0x04, 0x73, 0x61, 0x6d, 0x6c, 0x12, 0x47, 0x0a, 0x06, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x49, 0x44, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2e, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x0a, 0xe2, 0xde, 0x1f, 0x06, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x52, 0x06, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x1a, 0x9e, 0x01, 0x0a, 0x0b, 0x53, 0x41, 0x4d, 0x4c, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xe2, 0xde, 0x1f, 0x0b,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x52, 0x4c, 0x52, 0x0b, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x32, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x78, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x0f,
	0xe2, 0xde, 0x1f, 0x0b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x58, 0x4d, 0x4c, 0x52,
	0x0b, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x58, 0x6d, 0x6c, 0x12, 0x27, 0x0a, 0x0f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x1a, 0x0f, 0x0a, 0x0d, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xdb, 0x03, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x6c, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x0c, 0x69, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x49, 0x44, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x42, 0x0f, 0xe2, 0xde, 0x1f, 0x0b, 0x49, 0x44, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x0b, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x6a, 0x0a, 0x10, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x73, 0x76, 0x63, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x16, 0xe2, 0xde, 0x1f, 0x12, 0x53, 0x41, 0x4d, 0x4c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0e, 0x73, 0x61,
	0x6d, 0x6c, 0x53, 0x76, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xe5, 0x01, 0x0a,
	0x12, 0x53, 0x41, 0x4d, 0x4c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x07, 0x61, 0x63, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe2, 0xde, 0x1f, 0x06, 0x41, 0x43, 0x53, 0x55, 0x52, 0x4c,
	0x52, 0x06, 0x61, 0x63, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x32, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f,
	0xe2, 0xde, 0x1f, 0x0b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x52, 0x4c, 0x52,
	0x0b, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x08,
	0x64, 0x61, 0x73, 0x68, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b,
	0xe2, 0xde, 0x1f, 0x07, 0x44, 0x61, 0x73, 0x68, 0x55, 0x52, 0x4c, 0x52, 0x07, 0x64, 0x61, 0x73,
	0x68, 0x55, 0x72, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x65, 0x62, 0x75, 0x67, 0x4c, 0x6f, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x57, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x56, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x1a, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x2b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x22, 0x3f, 0x0a,
	0x13, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x64, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x03, 0x61, 0x64, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x22, 0x16,
	0x0a, 0x14, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6e, 0x0a, 0x07, 0x4f, 0x54, 0x50, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x49, 0x0a, 0x12, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x11, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9c, 0x01, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x38,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x3b, 0x0a, 0x0b, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49,
	0x43, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x45, 0x54, 0x5f, 0x54, 0x4f,
	0x4b, 0x45, 0x4e, 0x10, 0x02, 0x22, 0x75, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0c,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0f, 0xe2, 0xde, 0x1f, 0x0b, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x0b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x6e, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x35, 0x0a, 0x14,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x68, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x63, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x0f, 0x0a, 0x0d, 0x57, 0x68, 0x6f, 0x41, 0x6d, 0x49, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x0e, 0x57, 0x68, 0x6f, 0x41, 0x6d, 0x49, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x19, 0x0a,
	0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xe2, 0xde, 0x1f, 0x03,
	0x54, 0x54, 0x4c, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0x8a, 0x01, 0x0a, 0x03, 0x41, 0x43, 0x4c,
	0x12, 0x35, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x41, 0x43,
	0x4c, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x4c, 0x0a, 0x0c, 0x45, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x31, 0x5f, 0x31, 0x30, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x84, 0x01, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12,
	0x3d, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x1a, 0x3c,
	0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7a, 0x0a, 0x06,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f,
	0x31, 0x30, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x1a, 0x39, 0x0a,
	0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4e, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x65, 0x70, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f,
	0x12, 0x26, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x33, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x22, 0x43, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x65, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x22, 0x3c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f,
	0x31, 0x30, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73,
	0x22, 0x69, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x65, 0x70, 0x6f, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x53,
	0x65, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x23, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x43, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x72, 0x65, 0x70, 0x6f, 0x22, 0x4e, 0x0a, 0x08, 0x41, 0x43, 0x4c, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x22, 0x79, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x43, 0x4c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31,
	0x5f, 0x31, 0x30, 0x2e, 0x41, 0x43, 0x4c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0d, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x41, 0x43, 0x4c, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0c, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22,
	0x52, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x41, 0x43, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x72, 0x65, 0x70, 0x6f, 0x12, 0x2d, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31,
	0x30, 0x2e, 0x41, 0x43, 0x4c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x41, 0x43, 0x4c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xe2, 0xde, 0x1f, 0x03, 0x54, 0x54, 0x4c, 0x52, 0x03, 0x74, 0x74,
	0x6c, 0x22, 0x46, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x49, 0x0a, 0x16, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x03, 0x74, 0x74, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xe2, 0xde, 0x1f, 0x03, 0x54, 0x54, 0x4c, 0x52,
	0x03, 0x74, 0x74, 0x6c, 0x22, 0x19, 0x0a, 0x17, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x41, 0x75,
	0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2e, 0x0a, 0x16, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x19, 0x0a, 0x17, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0x0a, 0x17, 0x53, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x56, 0x0a, 0x14, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x64, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x03, 0x61, 0x64, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x22, 0x17, 0x0a,
	0x15, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x22, 0x27, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x30, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x50,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xe2, 0xde, 0x1f, 0x03, 0x54, 0x54, 0x4c, 0x52, 0x03, 0x74, 0x74, 0x6c,
	0x22, 0x86, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x54, 0x0a, 0x0e, 0x6f, 0x74, 0x70, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x11, 0xe2, 0xde, 0x1f, 0x0d, 0x4f, 0x54, 0x50,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6f, 0x74, 0x70, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x34, 0x0a, 0x05, 0x53, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x52, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x52, 0x49, 0x54,
	0x45, 0x52, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x10, 0x03, 0x32,
	0x98, 0x0d, 0x0a, 0x03, 0x41, 0x50, 0x49, 0x12, 0x45, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b,
	0x0a, 0x0a, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x10, 0x53, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x53,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x12, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f,
	0x31, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x73, 0x12, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f,
	0x31, 0x30, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f,
	0x31, 0x30, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x09, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f,
	0x31, 0x30, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x06, 0x57, 0x68, 0x6f, 0x41, 0x6d, 0x49, 0x12, 0x18, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x57, 0x68, 0x6f, 0x41, 0x6d, 0x49,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31,
	0x5f, 0x31, 0x30, 0x2e, 0x57, 0x68, 0x6f, 0x41, 0x6d, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x12, 0x1a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x08, 0x53,
	0x65, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31,
	0x5f, 0x31, 0x30, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e,
	0x53, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3f, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x43, 0x4c, 0x12, 0x18, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x43, 0x4c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f,
	0x31, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x43, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x06, 0x53, 0x65, 0x74, 0x41, 0x43, 0x4c, 0x12, 0x18, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x43, 0x4c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31,
	0x5f, 0x31, 0x30, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x43, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0f, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x41, 0x75, 0x74,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0f, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f,
	0x31, 0x30, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5d, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x46, 0x6f, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e,
	0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31,
	0x5f, 0x31, 0x30, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x46, 0x6f, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54,
	0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12,
	0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x12, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f,
	0x31, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x31, 0x5f, 0x31, 0x30, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x61, 0x63, 0x68, 0x79, 0x64, 0x65,
	0x72, 0x6d, 0x2f, 0x70, 0x61, 0x63, 0x68, 0x79, 0x64, 0x65, 0x72, 0x6d, 0x2f, 0x73, 0x72, 0x63,
	0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31,
	0x5f, 0x31, 0x30, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_client_admin_v1_10_auth_auth_proto_rawDescOnce sync.Once
	file_client_admin_v1_10_auth_auth_proto_rawDescData = file_client_admin_v1_10_auth_auth_proto_rawDesc
)

func file_client_admin_v1_10_auth_auth_proto_rawDescGZIP() []byte {
	file_client_admin_v1_10_auth_auth_proto_rawDescOnce.Do(func() {
		file_client_admin_v1_10_auth_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_admin_v1_10_auth_auth_proto_rawDescData)
	})
	return file_client_admin_v1_10_auth_auth_proto_rawDescData
}

var file_client_admin_v1_10_auth_auth_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_client_admin_v1_10_auth_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 56)
var file_client_admin_v1_10_auth_auth_proto_goTypes = []interface{}{
	(Scope)(0),                            // 0: auth_1_10.Scope
	(TokenInfo_TokenSource)(0),            // 1: auth_1_10.TokenInfo.TokenSource
	(*ActivateRequest)(nil),               // 2: auth_1_10.ActivateRequest
	(*ActivateResponse)(nil),              // 3: auth_1_10.ActivateResponse
	(*DeactivateRequest)(nil),             // 4: auth_1_10.DeactivateRequest
	(*DeactivateResponse)(nil),            // 5: auth_1_10.DeactivateResponse
	(*IDProvider)(nil),                    // 6: auth_1_10.IDProvider
	(*AuthConfig)(nil),                    // 7: auth_1_10.AuthConfig
	(*GetConfigurationRequest)(nil),       // 8: auth_1_10.GetConfigurationRequest
	(*GetConfigurationResponse)(nil),      // 9: auth_1_10.GetConfigurationResponse
	(*SetConfigurationRequest)(nil),       // 10: auth_1_10.SetConfigurationRequest
	(*SetConfigurationResponse)(nil),      // 11: auth_1_10.SetConfigurationResponse
	(*GetAdminsRequest)(nil),              // 12: auth_1_10.GetAdminsRequest
	(*GetAdminsResponse)(nil),             // 13: auth_1_10.GetAdminsResponse
	(*ModifyAdminsRequest)(nil),           // 14: auth_1_10.ModifyAdminsRequest
	(*ModifyAdminsResponse)(nil),          // 15: auth_1_10.ModifyAdminsResponse
	(*OTPInfo)(nil),                       // 16: auth_1_10.OTPInfo
	(*TokenInfo)(nil),                     // 17: auth_1_10.TokenInfo
	(*AuthenticateRequest)(nil),           // 18: auth_1_10.AuthenticateRequest
	(*AuthenticateResponse)(nil),          // 19: auth_1_10.AuthenticateResponse
	(*WhoAmIRequest)(nil),                 // 20: auth_1_10.WhoAmIRequest
	(*WhoAmIResponse)(nil),                // 21: auth_1_10.WhoAmIResponse
	(*ACL)(nil),                           // 22: auth_1_10.ACL
	(*Users)(nil),                         // 23: auth_1_10.Users
	(*Groups)(nil),                        // 24: auth_1_10.Groups
	(*AuthorizeRequest)(nil),              // 25: auth_1_10.AuthorizeRequest
	(*AuthorizeResponse)(nil),             // 26: auth_1_10.AuthorizeResponse
	(*GetScopeRequest)(nil),               // 27: auth_1_10.GetScopeRequest
	(*GetScopeResponse)(nil),              // 28: auth_1_10.GetScopeResponse
	(*SetScopeRequest)(nil),               // 29: auth_1_10.SetScopeRequest
	(*SetScopeResponse)(nil),              // 30: auth_1_10.SetScopeResponse
	(*GetACLRequest)(nil),                 // 31: auth_1_10.GetACLRequest
	(*ACLEntry)(nil),                      // 32: auth_1_10.ACLEntry
	(*GetACLResponse)(nil),                // 33: auth_1_10.GetACLResponse
	(*SetACLRequest)(nil),                 // 34: auth_1_10.SetACLRequest
	(*SetACLResponse)(nil),                // 35: auth_1_10.SetACLResponse
	(*GetAuthTokenRequest)(nil),           // 36: auth_1_10.GetAuthTokenRequest
	(*GetAuthTokenResponse)(nil),          // 37: auth_1_10.GetAuthTokenResponse
	(*ExtendAuthTokenRequest)(nil),        // 38: auth_1_10.ExtendAuthTokenRequest
	(*ExtendAuthTokenResponse)(nil),       // 39: auth_1_10.ExtendAuthTokenResponse
	(*RevokeAuthTokenRequest)(nil),        // 40: auth_1_10.RevokeAuthTokenRequest
	(*RevokeAuthTokenResponse)(nil),       // 41: auth_1_10.RevokeAuthTokenResponse
	(*SetGroupsForUserRequest)(nil),       // 42: auth_1_10.SetGroupsForUserRequest
	(*SetGroupsForUserResponse)(nil),      // 43: auth_1_10.SetGroupsForUserResponse
	(*ModifyMembersRequest)(nil),          // 44: auth_1_10.ModifyMembersRequest
	(*ModifyMembersResponse)(nil),         // 45: auth_1_10.ModifyMembersResponse
	(*GetGroupsRequest)(nil),              // 46: auth_1_10.GetGroupsRequest
	(*GetGroupsResponse)(nil),             // 47: auth_1_10.GetGroupsResponse
	(*GetUsersRequest)(nil),               // 48: auth_1_10.GetUsersRequest
	(*GetUsersResponse)(nil),              // 49: auth_1_10.GetUsersResponse
	(*GetOneTimePasswordRequest)(nil),     // 50: auth_1_10.GetOneTimePasswordRequest
	(*GetOneTimePasswordResponse)(nil),    // 51: auth_1_10.GetOneTimePasswordResponse
	(*IDProvider_SAMLOptions)(nil),        // 52: auth_1_10.IDProvider.SAMLOptions
	(*IDProvider_GitHubOptions)(nil),      // 53: auth_1_10.IDProvider.GitHubOptions
	(*AuthConfig_SAMLServiceOptions)(nil), // 54: auth_1_10.AuthConfig.SAMLServiceOptions
	nil,                                   // 55: auth_1_10.ACL.EntriesEntry
	nil,                                   // 56: auth_1_10.Users.UsernamesEntry
	nil,                                   // 57: auth_1_10.Groups.GroupsEntry
	(*timestamp.Timestamp)(nil),           // 58: google.protobuf.Timestamp
}
var file_client_admin_v1_10_auth_auth_proto_depIdxs = []int32{
	52, // 0: auth_1_10.IDProvider.saml:type_name -> auth_1_10.IDProvider.SAMLOptions
	53, // 1: auth_1_10.IDProvider.github:type_name -> auth_1_10.IDProvider.GitHubOptions
	6,  // 2: auth_1_10.AuthConfig.id_providers:type_name -> auth_1_10.IDProvider
	54, // 3: auth_1_10.AuthConfig.saml_svc_options:type_name -> auth_1_10.AuthConfig.SAMLServiceOptions
	7,  // 4: auth_1_10.GetConfigurationResponse.configuration:type_name -> auth_1_10.AuthConfig
	7,  // 5: auth_1_10.SetConfigurationRequest.configuration:type_name -> auth_1_10.AuthConfig
	58, // 6: auth_1_10.OTPInfo.session_expiration:type_name -> google.protobuf.Timestamp
	1,  // 7: auth_1_10.TokenInfo.source:type_name -> auth_1_10.TokenInfo.TokenSource
	55, // 8: auth_1_10.ACL.entries:type_name -> auth_1_10.ACL.EntriesEntry
	56, // 9: auth_1_10.Users.usernames:type_name -> auth_1_10.Users.UsernamesEntry
	57, // 10: auth_1_10.Groups.groups:type_name -> auth_1_10.Groups.GroupsEntry
	0,  // 11: auth_1_10.AuthorizeRequest.scope:type_name -> auth_1_10.Scope
	0,  // 12: auth_1_10.GetScopeResponse.scopes:type_name -> auth_1_10.Scope
	0,  // 13: auth_1_10.SetScopeRequest.scope:type_name -> auth_1_10.Scope
	0,  // 14: auth_1_10.ACLEntry.scope:type_name -> auth_1_10.Scope
	32, // 15: auth_1_10.GetACLResponse.entries:type_name -> auth_1_10.ACLEntry
	32, // 16: auth_1_10.GetACLResponse.robot_entries:type_name -> auth_1_10.ACLEntry
	32, // 17: auth_1_10.SetACLRequest.entries:type_name -> auth_1_10.ACLEntry
	58, // 18: auth_1_10.GetOneTimePasswordResponse.otp_expiration:type_name -> google.protobuf.Timestamp
	0,  // 19: auth_1_10.ACL.EntriesEntry.value:type_name -> auth_1_10.Scope
	2,  // 20: auth_1_10.API.Activate:input_type -> auth_1_10.ActivateRequest
	4,  // 21: auth_1_10.API.Deactivate:input_type -> auth_1_10.DeactivateRequest
	8,  // 22: auth_1_10.API.GetConfiguration:input_type -> auth_1_10.GetConfigurationRequest
	10, // 23: auth_1_10.API.SetConfiguration:input_type -> auth_1_10.SetConfigurationRequest
	12, // 24: auth_1_10.API.GetAdmins:input_type -> auth_1_10.GetAdminsRequest
	14, // 25: auth_1_10.API.ModifyAdmins:input_type -> auth_1_10.ModifyAdminsRequest
	18, // 26: auth_1_10.API.Authenticate:input_type -> auth_1_10.AuthenticateRequest
	25, // 27: auth_1_10.API.Authorize:input_type -> auth_1_10.AuthorizeRequest
	20, // 28: auth_1_10.API.WhoAmI:input_type -> auth_1_10.WhoAmIRequest
	27, // 29: auth_1_10.API.GetScope:input_type -> auth_1_10.GetScopeRequest
	29, // 30: auth_1_10.API.SetScope:input_type -> auth_1_10.SetScopeRequest
	31, // 31: auth_1_10.API.GetACL:input_type -> auth_1_10.GetACLRequest
	34, // 32: auth_1_10.API.SetACL:input_type -> auth_1_10.SetACLRequest
	36, // 33: auth_1_10.API.GetAuthToken:input_type -> auth_1_10.GetAuthTokenRequest
	38, // 34: auth_1_10.API.ExtendAuthToken:input_type -> auth_1_10.ExtendAuthTokenRequest
	40, // 35: auth_1_10.API.RevokeAuthToken:input_type -> auth_1_10.RevokeAuthTokenRequest
	42, // 36: auth_1_10.API.SetGroupsForUser:input_type -> auth_1_10.SetGroupsForUserRequest
	44, // 37: auth_1_10.API.ModifyMembers:input_type -> auth_1_10.ModifyMembersRequest
	46, // 38: auth_1_10.API.GetGroups:input_type -> auth_1_10.GetGroupsRequest
	48, // 39: auth_1_10.API.GetUsers:input_type -> auth_1_10.GetUsersRequest
	50, // 40: auth_1_10.API.GetOneTimePassword:input_type -> auth_1_10.GetOneTimePasswordRequest
	3,  // 41: auth_1_10.API.Activate:output_type -> auth_1_10.ActivateResponse
	5,  // 42: auth_1_10.API.Deactivate:output_type -> auth_1_10.DeactivateResponse
	9,  // 43: auth_1_10.API.GetConfiguration:output_type -> auth_1_10.GetConfigurationResponse
	11, // 44: auth_1_10.API.SetConfiguration:output_type -> auth_1_10.SetConfigurationResponse
	13, // 45: auth_1_10.API.GetAdmins:output_type -> auth_1_10.GetAdminsResponse
	15, // 46: auth_1_10.API.ModifyAdmins:output_type -> auth_1_10.ModifyAdminsResponse
	19, // 47: auth_1_10.API.Authenticate:output_type -> auth_1_10.AuthenticateResponse
	26, // 48: auth_1_10.API.Authorize:output_type -> auth_1_10.AuthorizeResponse
	21, // 49: auth_1_10.API.WhoAmI:output_type -> auth_1_10.WhoAmIResponse
	28, // 50: auth_1_10.API.GetScope:output_type -> auth_1_10.GetScopeResponse
	30, // 51: auth_1_10.API.SetScope:output_type -> auth_1_10.SetScopeResponse
	33, // 52: auth_1_10.API.GetACL:output_type -> auth_1_10.GetACLResponse
	35, // 53: auth_1_10.API.SetACL:output_type -> auth_1_10.SetACLResponse
	37, // 54: auth_1_10.API.GetAuthToken:output_type -> auth_1_10.GetAuthTokenResponse
	39, // 55: auth_1_10.API.ExtendAuthToken:output_type -> auth_1_10.ExtendAuthTokenResponse
	41, // 56: auth_1_10.API.RevokeAuthToken:output_type -> auth_1_10.RevokeAuthTokenResponse
	43, // 57: auth_1_10.API.SetGroupsForUser:output_type -> auth_1_10.SetGroupsForUserResponse
	45, // 58: auth_1_10.API.ModifyMembers:output_type -> auth_1_10.ModifyMembersResponse
	47, // 59: auth_1_10.API.GetGroups:output_type -> auth_1_10.GetGroupsResponse
	49, // 60: auth_1_10.API.GetUsers:output_type -> auth_1_10.GetUsersResponse
	51, // 61: auth_1_10.API.GetOneTimePassword:output_type -> auth_1_10.GetOneTimePasswordResponse
	41, // [41:62] is the sub-list for method output_type
	20, // [20:41] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_client_admin_v1_10_auth_auth_proto_init() }
func file_client_admin_v1_10_auth_auth_proto_init() {
	if File_client_admin_v1_10_auth_auth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_client_admin_v1_10_auth_auth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigurationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigurationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetConfigurationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetConfigurationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyAdminsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyAdminsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTPInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhoAmIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhoAmIResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Users); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Groups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScopeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScopeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetScopeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetScopeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetACLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACLEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetACLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetACLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetACLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtendAuthTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtendAuthTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeAuthTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeAuthTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupsForUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupsForUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneTimePasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneTimePasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDProvider_SAMLOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDProvider_GitHubOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_admin_v1_10_auth_auth_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthConfig_SAMLServiceOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_admin_v1_10_auth_auth_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   56,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_client_admin_v1_10_auth_auth_proto_goTypes,
		DependencyIndexes: file_client_admin_v1_10_auth_auth_proto_depIdxs,
		EnumInfos:         file_client_admin_v1_10_auth_auth_proto_enumTypes,
		MessageInfos:      file_client_admin_v1_10_auth_auth_proto_msgTypes,
	}.Build()
	File_client_admin_v1_10_auth_auth_proto = out.File
	file_client_admin_v1_10_auth_auth_proto_rawDesc = nil
	file_client_admin_v1_10_auth_auth_proto_goTypes = nil
	file_client_admin_v1_10_auth_auth_proto_depIdxs = nil
}
